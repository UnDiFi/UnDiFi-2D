head	1.4;
access
	abonfi
	aldo
	tesistim;
symbols
	release3_14_0:1.4
	release3_13_0:1.4
	release3_12_0:1.4
	release3_11_0:1.4
	release3_10_0:1.4
	release3_8_0:1.4
	release3_7_1:1.4
	release3_7_0:1.4
	release3_4_5:1.4
	release3_4_4:1.4
	release3_4_3:1.4
	release3_4_2:1.4
	release3_4_1:1.4
	release3_4_0:1.4
	release3_3_5:1.4
	release3_3_4:1.4
	release3_3_3:1.4
	release3_3_2:1.4
	release3_3_1:1.3
	release3_3_0:1.2;
locks; strict;
comment	@c @;


1.4
date	2013.01.29.14.33.34;	author abonfi;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.26.12.31.15;	author abonfi;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.09.09.59.12;	author abonfi;	state Exp;
branches;
next	1.1;

1.1
date	99.12.27.09.31.54;	author aldo;	state Exp;
branches;
next	;


desc
@ransformation matrix from symmetrizing to conserved variables
@


1.4
log
@The adiabatic index is not any longer a parameter, but a variable
@
text
@      SUBROUTINE SYMM2CONS(ZROE,DUDV,NOFVAR,NDIM)
C
C     $Id: symm2cons.f,v 1.3 2013/01/26 12:31:15 abonfi Exp abonfi $
C
      IMPLICIT NONE
C
C
C     Transformation matrix from symmetrizing to conserved variables
C
C     .. Parameters ..
      INCLUDE 'constants.h'
      INCLUDE 'pfcgas.com'
C     ..
C     .. Scalar Arguments ..
      INTEGER NDIM,NOFVAR
C     ..
C     .. Array Arguments ..
      DOUBLE PRECISION DUDV(NOFVAR,NOFVAR),ZROE(NOFVAR)
C     ..
C     .. Local Scalars ..
      DOUBLE PRECISION AINV,ASQR,DENS,RUX,RUY,RUZ,TEMP,UX,UY,UZ,ZINV,
     +                 ZINVSQR
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC DSQRT
C     ..
      TEMP = ZROE(3)*ZROE(3) + ZROE(4)*ZROE(4)
      IF (NDIM.EQ.3) TEMP = TEMP + ZROE(5)*ZROE(5)
      TEMP = HALF*TEMP
C
      ZINV = ONE/ZROE(1)
      DENS = ZROE(1)*ZROE(1)
      ZINVSQR = ZINV*ZINV
      ASQR = GM1* (ZROE(2)-TEMP*ZINV)*ZINV
      AINV = ONE/DSQRT(ASQR)
C
      UX = ZROE(3)*ZINV
      UY = ZROE(4)*ZINV
      RUX = ZROE(3)*ZROE(1)
      RUY = ZROE(4)*ZROE(1)
C
      DUDV(1,1) = ONE
      DUDV(2,1) = TEMP*ZINVSQR
      DUDV(3,1) = UX
      DUDV(4,1) = UY
C
      DUDV(1,2) = DENS*AINV
      DUDV(2,2) = ZROE(1)*ZROE(2)*AINV
      DUDV(3,2) = RUX*AINV
      DUDV(4,2) = RUY*AINV
C
      DUDV(1,3) = ZERO
      DUDV(2,3) = RUX
      DUDV(3,3) = DENS
      DUDV(4,3) = ZERO
C
      DUDV(1,4) = ZERO
      DUDV(2,4) = RUY
      DUDV(3,4) = ZERO
      DUDV(4,4) = DENS
C
      IF (NDIM.EQ.2) RETURN
      UZ = ZROE(5)*ZINV
      RUZ = ZROE(5)*ZROE(1)
C
      DUDV(5,1) = UZ
      DUDV(5,2) = RUZ*AINV
      DUDV(5,3) = ZERO
      DUDV(5,4) = ZERO
C
      DUDV(1,5) = ZERO
      DUDV(2,5) = RUZ
      DUDV(3,5) = ZERO
      DUDV(4,5) = ZERO
      DUDV(5,5) = DENS
C
      RETURN

      END
@


1.3
log
@using Id instead of the Heaser tag for RCS
@
text
@d3 1
a3 1
C     $Id: symm2cons.f,v 1.2 2009/01/09 09:59:12 abonfi Exp abonfi $
d12 1
@


1.2
log
@gas constants are now included
@
text
@d3 1
a3 2
C     $Id: symm2cons.f,v 1.1 1999/12/27 09:31:54 aldo Exp $
C     $Header: /usr/people/aldo/CFD_codes/EulFS.0.10.8/src/euler/RCS/symm2cons.f,v 1.1 1999/12/27 09:31:54 aldo Exp $
@


1.1
log
@Initial revision
@
text
@d3 2
a4 2
C     $Id$
C     $Header$
d12 1
a12 3
      REAL*8 ZERO,HALF,ONE,TWO,GAM,GM1
      PARAMETER (ZERO=0.00d0,HALF=0.5d0,ONE=1.00d0,TWO=2.00d0,
     +          GAM=1.40d0,GM1=GAM-ONE)
d25 1
a25 1
      INTRINSIC SQRT
d35 1
a35 1
      AINV = ONE/SQRT(ASQR)
@
