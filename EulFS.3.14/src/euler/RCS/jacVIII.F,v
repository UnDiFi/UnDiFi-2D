head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	98.04.07.12.55.04;	author aldo;	state Exp;
branches;
next	;


desc
@debugger options now working
@


1.1
log
@Initial revision
@
text
@      SUBROUTINE JACVIII(dndq,VECN,APOS,ANEG,LDA,NDIM)

      IMPLICIT NONE

C*PT*WARNING* Already double-precision
C*PT*WARNING* Already double-precision
C*PT*WARNING* Already double-precision
      INCLUDE 'paramt.h'
      INCLUDE 'chorin.com'
      INCLUDE 'three'
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION DNDQ
      INTEGER LDA,NDIM
C     ..
C     .. Array Arguments ..
      DOUBLE PRECISION VECN(*),ANEG(LDA,LDA),APOS(LDA,LDA)
C     ..
C     .. Local Scalars ..
      DOUBLE PRECISION ANX,ANY,ANZ,AREA,AREAINV,C,CINV,CSQR,
     +                 CSQRINV,HALF,LMINS,LPLUS,ONE,TEMP,U_DOT_M
      INTEGER N,IVAR
C     ..
C     .. Local Arrays ..
C     DOUBLE PRECISION LNEG(3),LPOS(3)
C     ..
C     .. External Functions ..
      DATA ANX,ANY,ANZ/0.d0,0.d0,0.d0/
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC DSQRT,SQRT
C     ..
C
      HALF = 0.5d0
C
      ANX = VECN(1)
      ANY = VECN(2)
      IF (NDIM.EQ.3) ANZ = VECN(3)
C
      AREA = ANX*ANX+ANY*ANY+ANZ*ANZ
      AREA = SQRT(AREA)
      AREAINV = 1.d0/AREA
C
      ANX = ANX*AREAINV
      ANY = ANY*AREAINV
      ANZ = ANZ*AREAINV
      U_DOT_M = ZAVG(2)*ANX + ZAVG(3)*ANY + ZAVG(4)*ANZ
C
C
      CSQR = U_DOT_M*U_DOT_M + BETA
      C = DSQRT(CSQR)
      CSQRINV = 1.d0/CSQR
      CINV = 1.d0/C
C
      LPLUS = U_DOT_M + C
      LMINS = U_DOT_M - C
C
      TEMP = HALF*BETA*DNDQ/C*LPLUS*LMINS
C
      APOS(1,1) = -HALF*U_DOT_M/C*DNDQ*BETA
      APOS(1,2) = -TEMP*ANX*AREAINV
      APOS(1,3) = -TEMP*ANY*AREAINV
C
      ANEG(1,1) = -APOS(1,1)
      ANEG(1,2) =  TEMP*ANX*AREAINV
      ANEG(1,3) =  TEMP*ANY*AREAINV
C
      IF (LDA.EQ.4) THEN
          APOS(1,4) = -TEMP*ANZ*AREAINV
          ANEG(1,4) =  TEMP*ANZ*AREAINV
      ENDIF
C
      RETURN

      END
@
