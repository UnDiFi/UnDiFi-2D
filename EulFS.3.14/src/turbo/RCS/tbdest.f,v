head	1.3;
access
	abonfi
	tesistim;
symbols
	release3_14_0:1.3
	release3_13_0:1.3
	release3_12_0:1.3
	release3_11_0:1.3
	release3_10_0:1.3
	release3_8_0:1.3
	release3_7_1:1.3
	release3_7_0:1.3
	release3_4_5:1.3
	release3_4_4:1.2
	release3_4_3:1.2
	release3_4_2:1.2
	release3_4_1:1.2
	release3_4_0:1.2
	release3_3_5:1.2
	release3_3_4:1.2
	release3_3_3:1.2
	release3_3_2:1.2
	release3_3_1:1.2
	release3_3_0:1.2;
locks; strict;
comment	@c @;


1.3
date	2016.11.10.09.48.44;	author abonfi;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.06.09.31.30;	author abonfi;	state Exp;
branches;
next	1.1;

1.1
date	97.11.29.08.10.39;	author aldo;	state Exp;
branches;
next	;


desc
@Destruction term for the Spalart-Allmaras model
@


1.3
log
@Doxygen documentation added
@
text
@!> \brief \b TBDEST
!> \par Purpose
!>
!> (Spalart & Allmaras model: versions: all, except Bassi)
!>
!> Compute the destruction term
!>
!> \f[
!> s_{D} = -\left[c_w f_w -\frac{c_{b1}}{\kappa^2} f_{t2} \right]\left(\frac{\nu}{d}\right)^2
!> \f]
!>
!>
!> @@param[in] TD is the distance \f$ d \f$ from the nearest wall
!> @@param[in] TS is the modified strain \f$ \tilde{S} \f$
!> @@param[in] TV is turbulent laminar viscosity \f$ \tilde{\nu} \f$
!> @@param[in] VI is kinematic laminar viscosity \f$ \nu \f$
!> \author $Author: abonfi $
!> \version $Revision: 1.3 $
!> \date $Date: 2015/05/11 07:23:09 $
!> \warning are there any warnings?
      DOUBLE PRECISION FUNCTION TBDEST(TD,TS,TV,VI)
c2345678
      IMPLICIT NONE
      INCLUDE 'turb.com'
      INCLUDE 'visco.com'

C     .. Scalar Arguments ..
      DOUBLE PRECISION TD,TS,TV,VI
C     ..
C     .. Local Scalars ..
      DOUBLE PRECISION DUM1,TCHI,TFT2,TR,DENOM
C     ..
C     .. External Functions ..
      DOUBLE PRECISION TFW
      EXTERNAL TFW
C     ..
C     IF(TS.eq.0.0)TS=1.0d-22
      DENOM=TS* (TK*TD)**2.
      IF(DABS(DENOM).lt.1.d-22) DENOM=1.d-22
Caldo TR = TV/ (TS* (TK*TD)**2.)*REINV
      TR = TV/ DENOM*REINV
      IF (TR.GT.10.) THEN
C         WRITE (*,FMT=*) 'tr>10',TR
C         PAUSE

          TR = 10.
      ENDIF

      DUM1 = 0.
      IF(TTFLAG.EQ.1)THEN
        TCHI=TV/VI
        DUM1=TCB1/TK**2*TFT2(TCHI)
      ENDIF
      TBDEST = - (TCW1*TFW(TR)-DUM1)* (TV/TD)**2. *REINV
      RETURN

      END
@


1.2
log
@Un fix suggerito da Alberto Grimaldi
@
text
@d1 20
a20 12
C///////////////////////////////////////////////////////////////////////

C       Identification Keywords:

C       @@(#)tbdest.f      1.0.0.1   95/08/22        12:00:00
C       /alpha1/users/mubadmin/scalar/sccs/s.tbdest.f
C

C///////////////////////////////////////////////////////////////////////

C//////////////////////////////////////////////////////////////////////
C
a21 24
*  ==============================================================
*
*
*      FILENAME: tbprodc.f
*
*
*
*      DESCRIPTION:
*      -----------
*
*      Destruction term computation
*      (Spalart & Allmaras model: version)
*
*      FILE HISTORY:
*      ------------
*
*      LANGUAGE : Fortran 77
*      LAST CHANGE : October 97
*
*
*      Note the nondimensionalization of r
*
*  ==============================================================

a22 1
c versione semplificata del termine di produzione
@


1.1
log
@Initial revision
@
text
@d48 1
a48 1
      DOUBLE PRECISION DUM1,TCHI,TFT2,TR
d55 4
a58 1
      TR = TV/ (TS* (TK*TD)**2.)*REINV
@
