head	1.14;
access
	abonfi
	tesistim;
symbols;
locks; strict;
comment	@c @;


1.14
date	2011.09.16.07.19.48;	author abonfi;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.11.13.10.58;	author abonfi;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.19.09.19.00;	author abonfi;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.18.08.33.15;	author abonfi;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.30.14.19.34;	author aldo;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.19.16.10.34;	author aldo;	state Exp;
branches;
next	1.8;

1.8
date	99.12.27.09.08.26;	author aldo;	state Exp;
branches;
next	1.7;

1.7
date	99.11.05.20.43.47;	author aldo;	state Exp;
branches;
next	1.6;

1.6
date	98.11.07.09.01.00;	author aldo;	state Exp;
branches;
next	1.5;

1.5
date	98.07.28.11.13.17;	author aldo;	state Exp;
branches;
next	1.4;

1.4
date	98.05.10.08.24.31;	author aldo;	state Exp;
branches;
next	1.3;

1.3
date	98.03.16.17.11.10;	author aldo;	state Exp;
branches;
next	1.2;

1.2
date	98.02.10.08.53.46;	author aldo;	state Exp;
branches;
next	1.1;

1.1
date	98.01.01.22.00.32;	author aldo;	state Exp;
branches;
next	;


desc
@Add timestep to the stiffness matrix
@


1.14
log
@Changed PETSc header file to comply with version 3.1
@
text
@      SUBROUTINE ADDTSTEP(A,CNST,DT,RHS,NR,NOFVAR,TIMEIMPL)
C
C     Purpose: -for implicit timestepping:
C              add the matrix A the diagonal matrix of the
C              control volumes divided by the local timestep 
C              -for explicit timestepping:
C              multiply the RHS vector by the diagonal matrix of the
C              control volumes divided by the local timestep 
C
C
C
      IMPLICIT NONE
C
C     $Id: addtstep.F,v 1.13 2009/06/11 13:10:58 abonfi Exp abonfi $
C
C
#include "finclude/petscsys.h"
#include "finclude/petscvec.h"
#include "finclude/petscmat.h"
C
C     .. PETSc Matrices ..
      Mat A
C     .. PETSc Vectors ..
      Vec DT,RHS,DIAG
C
      PetscScalar DIAG_V(1),DT_V(1)
      PetscOffset DIAG_PTR,DT_PTR,LOCA,LOCB
C
C     .. Scalar Arguments ..
      INTEGER NOFVAR,NR
      LOGICAL TIMEIMPL
      DOUBLE PRECISION CNST
C     ..
C     .. Local Scalars ..
      INTEGER IFAIL,I,J
      DOUBLE PRECISION TMP
C     ..
C     .. External Functions ..
C     ..
C
#ifdef MPI
      CALL VecCreateMPI(PETSC_COMM_WORLD,NR*NOFVAR,PETSC_DECIDE,
     +                  DIAG,IFAIL) 
#else
      CALL VecCreateSeq(PETSC_COMM_SELF,NR*NOFVAR,DIAG,IFAIL) 
#endif
      CALL VecGetArray(DT,DT_V,DT_PTR,IFAIL)
      CALL VecGetArray(DIAG,DIAG_V,DIAG_PTR,IFAIL)
      DO 100 I = 1, NR
          LOCB = DT_PTR + I
          TMP = DT_V(LOCB)
          DO 100 J = 1,NOFVAR
             LOCA = DIAG_PTR + (I-1)*NOFVAR + J
             DIAG_V(LOCA) = TMP/CNST
  100 CONTINUE
      CALL VecRestoreArray(DT,DT_V,DT_PTR,IFAIL)
      CALL VecRestoreArray(DIAG,DIAG_V,DIAG_PTR,IFAIL)
      
      IF( TIMEIMPL )THEN
          CALL MatDiagonalSet(A,DIAG,ADD_VALUES,IFAIL)
      ELSE
          CALL VecPointwiseDivide(RHS,DIAG,RHS,IFAIL)
      ENDIF
      CALL VecDestroy(DIAG,IFAIL)
      RETURN

      END
@


1.13
log
@location of PETSc include file ahs chanegd with release 3.0.0
@
text
@d14 1
a14 1
C     $Id: addtstep.F,v 1.12 2002/02/19 09:19:00 abonfi Exp $
d17 1
a17 1
#include "finclude/petsc.h"
@


1.12
log
@changed Scalar into PetscScalar to comply with PETSc 2.1.1
@
text
@d14 1
a14 1
C     $Id: addtstep.F,v 1.11 2001/07/18 08:33:15 abonfi Exp abonfi $
d17 3
a19 3
#include "include/finclude/petsc.h"
#include "include/finclude/petscvec.h"
#include "include/finclude/petscmat.h"
@


1.11
log
@division by CNST has been brought inside the routine
@
text
@d14 1
a14 1
C     $Id: addtstep.F,v 1.10 2000/10/30 14:19:34 aldo Exp abonfi $
d26 1
a26 1
      Scalar DIAG_V(1),DT_V(1)
@


1.10
log
@changed an INTEGER to PetscOffset following a run-time error
discovered on IRIX64
@
text
@d1 1
a1 1
      SUBROUTINE ADDTSTEP(A,DT,RHS,NR,NOFVAR,TIMEIMPL)
d14 1
a14 1
C     $Id: addtstep.F,v 1.9 2000/10/19 16:10:34 aldo Exp aldo $
d32 1
d54 1
a54 1
             DIAG_V(LOCA) = TMP
@


1.9
log
@changed include file names for PETSc rev. 2.0.29
@
text
@d14 1
a14 1
C     $Id: addtstep.F,v 1.8 1999/12/27 09:08:26 aldo Exp aldo $
d27 1
a27 1
      PetscOffset DIAG_PTR,DT_PTR
d34 1
a34 1
      INTEGER IFAIL,LOCA,LOCB,I,J
@


1.8
log
@renamed timestep vector
@
text
@d14 1
a14 1
C     $Id: addtstep.F,v 1.7 1999/11/05 20:43:47 aldo Exp aldo $
d18 2
a19 2
#include "include/finclude/vec.h"
#include "include/finclude/mat.h"
d59 1
a59 1
          CALL MatDiagonalShift(A,DIAG,IFAIL)
@


1.7
log
@changed integer into PetscOffset
@
text
@d1 9
a10 1
      SUBROUTINE ADDTSTEP(A,TSTEP,RHS,NR,NOFVAR,TIMEIMPL)
d14 1
a14 1
C     $Id: addtstep.F,v 1.6 1998/11/07 09:01:00 aldo Exp caspur $
d24 1
a24 1
      Vec TSTEP,RHS,DIAG
d26 2
a27 2
      Scalar DIAG_V(1),TSTEP_V(1)
      PetscOffset DIAG_PTR,TSTEP_PTR
d46 1
a46 1
      CALL VecGetArray(TSTEP,TSTEP_V,TSTEP_PTR,IFAIL)
d49 2
a50 2
          LOCB = TSTEP_PTR + I
          TMP = TSTEP_V(LOCB)
d55 1
a55 1
      CALL VecRestoreArray(TSTEP,TSTEP_V,TSTEP_PTR,IFAIL)
@


1.6
log
@Add automatic identification flag
@
text
@d6 1
a6 1
C     $Id$
d18 3
a22 1
      DOUBLE PRECISION DIAG_V(1),TSTEP_V(1),TMP
d26 2
a27 1
      INTEGER IFAIL,DIAG_PTR,TSTEP_PTR,LOCA,LOCB,I,J
a37 1
C     CALL VecGetOwnershipRange(TSTEP,LOW,HIGH,IFAIL)
@


1.5
log
@parallel version using pre-processor directives
@
text
@d6 3
@


1.4
log
@Include files path for PETSC fortran header files
has been changed to comply to rev. 2.0.22 of PETSc
@
text
@d2 1
a2 1
      SUBROUTINE ADDTSTEP(A,DT,RHS,NR,NOFVAR,TIMEIMPL)
a8 1
#include "include/finclude/is.h"
d13 1
a13 5
      Vec DT,RHS,DIAG
C     .. PETSc Index Sets ..
      IS  IdxFrom,IdxTo
C     .. PETSc Scatter contexts ..
      VecScatter MyOwnScatter
d17 1
d21 1
a21 1
      INTEGER I,IFAIL
d26 19
a44 16
      CALL VecCreateSeq(MPI_COMM_WORLD,NR*NOFVAR,DIAG,IFAIL) 
      CALL ISCreateStride(MPI_COMM_WORLD,NR,0,1,IdxFrom,IFAIL)
C
      DO 1 I = 1,NOFVAR
C
      CALL ISCreateStride(MPI_COMM_WORLD,NR,(I-1),NOFVAR,IdxTo,IFAIL)
      CALL VecScatterCreate(DT,IdxFrom,DIAG,IdxTo,MyOwnScatter,IFAIL)
      CALL VecScatterBegin(DT,DIAG,ADD_VALUES,SCATTER_FORWARD,
     +                     MyOwnScatter,IFAIL)
      CALL VecScatterEnd(DT,DIAG,ADD_VALUES,SCATTER_FORWARD,
     +                   MyOwnScatter,IFAIL)
      CALL VecScatterDestroy(MyOwnScatter,IFAIL)
      CALL ISDestroy(IdxTo,IFAIL)
C
    1 CONTINUE
      CALL ISDestroy(IdxFrom,IFAIL)
@


1.3
log
@now handles explicit timestepping
@
text
@d6 4
a9 4
#include "include/FINCLUDE/petsc.h"
#include "include/FINCLUDE/vec.h"
#include "include/FINCLUDE/mat.h"
#include "include/FINCLUDE/is.h"
@


1.2
log
@Unused variables removed
@
text
@d2 1
a2 1
      SUBROUTINE ADDTSTEP(A,DT,NR,NOFVAR)
d11 1
d13 3
a15 1
      Vec DT,DIAG
d17 1
d22 1
d46 5
a50 1
      CALL MatDiagonalShift(A,DIAG,IFAIL)
@


1.1
log
@Initial revision
@
text
@d20 1
a20 2
      DOUBLE PRECISION DTMAX,TEMP
      INTEGER I,IADD,II,IFAIL
a22 3
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC DABS
@
