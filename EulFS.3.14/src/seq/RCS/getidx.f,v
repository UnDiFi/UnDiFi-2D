head	1.1;
access
	abonfi
	tesistim;
symbols
	release3_14_0:1.1
	release3_13_0:1.1
	release3_12_0:1.1
	release3_11_0:1.1
	release3_10_0:1.1
	release3_8_0:1.1
	release3_7_1:1.1
	release3_7_0:1.1
	release3_4_5:1.1
	release3_4_4:1.1
	release3_4_3:1.1
	release3_4_2:1.1
	release3_4_1:1.1
	release3_4_0:1.1
	release3_3_5:1.1
	release3_3_4:1.1
	release3_3_3:1.1
	release3_3_2:1.1
	release3_3_1:1.1
	release3_3_0:1.1;
locks; strict;
comment	@c @;


1.1
date	99.09.01.11.04.54;	author aldo;	state Exp;
branches;
next	;


desc
@compute poiters for ghost nodes
@


1.1
log
@Initial revision
@
text
@      SUBROUTINE GetIdx(NGHOST,NOFVAR,GHOSTS,GHOSTS2)
c
      IMPLICIT NONE
c
c     nghost is the number of ghost meshpoints
c     ghosts stores the nodal indexes (1-based indexing)
c            of the ghost meshpoints
c     ghosts2 stores the adresses (0-based indexing)
c              of the unknowns of the ghost meshpoints
c

C     .. Scalar Arguments ..
      INTEGER NGHOST,NOFVAR
C     ..
C     .. Array Arguments ..
      INTEGER GHOSTS(NGHOST),GHOSTS2(NOFVAR,NGHOST)
C     ..
C     .. Local Scalars ..
      INTEGER I,IPOIN,J
C     ..
      DO 1 I = 1,NGHOST
          IPOIN = GHOSTS(I)
          DO 1 J = 1,NOFVAR
              GHOSTS2(J,I) = (IPOIN-1)*NOFVAR + J - 1
    1 CONTINUE
      RETURN

      END
@
