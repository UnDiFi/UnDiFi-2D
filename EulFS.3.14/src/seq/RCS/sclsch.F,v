head	1.23;
access
	abonfi
	tesistim;
symbols
	release3_14_0:1.23
	release3_13_0:1.23
	release3_12_0:1.23
	release3_11_0:1.23
	release3_10_0:1.23
	release3_8_0:1.23
	release3_7_1:1.22
	release3_7_0:1.22
	release3_4_5:1.21
	release3_4_4:1.21
	release3_4_3:1.21
	release3_4_2:1.21
	release3_4_1:1.21
	release3_4_0:1.21
	release3_3_5:1.21
	release3_3_4:1.21
	release3_3_3:1.21
	release3_3_2:1.21
	release3_3_1:1.21
	release3_3_0:1.21;
locks; strict;
comment	@c @;


1.23
date	2020.04.23.09.37.34;	author abonfi;	state Exp;
branches;
next	1.22;

1.22
date	2016.11.10.11.25.13;	author abonfi;	state Exp;
branches;
next	1.21;

1.21
date	2011.09.16.07.19.48;	author abonfi;	state Exp;
branches;
next	1.20;

1.20
date	2011.03.30.09.02.19;	author abonfi;	state Exp;
branches;
next	1.19;

1.19
date	2009.06.11.13.10.58;	author abonfi;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.11.08.57.55;	author abonfi;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.12.07.12.44;	author abonfi;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.17.19.19.00;	author aldo;	state Exp;
branches;
next	1.15;

1.15
date	2004.12.20.14.38.09;	author aldo;	state Exp;
branches;
next	1.14;

1.14
date	2001.10.17.15.35.47;	author abonfi;	state Exp;
branches;
next	1.13;

1.13
date	2000.11.22.14.34.49;	author aldo;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.20.08.33.41;	author aldo;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.18.14.03.45;	author aldo;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.17.09.14.36;	author aldo;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.17.08.45.26;	author aldo;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.23.16.44.49;	author aldo;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.24.15.15.11;	author aldo;	state Exp;
branches;
next	1.6;

1.6
date	99.12.27.09.20.28;	author aldo;	state Exp;
branches;
next	1.5;

1.5
date	99.08.11.18.15.42;	author aldo;	state Exp;
branches;
next	1.4;

1.4
date	98.11.07.09.01.00;	author aldo;	state Exp;
branches;
next	1.3;

1.3
date	98.05.10.08.24.31;	author aldo;	state Exp;
branches;
next	1.2;

1.2
date	98.01.01.22.12.32;	author aldo;	state Exp;
branches;
next	1.1;

1.1
date	97.11.29.08.49.33;	author aldo;	state Exp;
branches;
next	;


desc
@Selects scalar Selectsschemes by passing the appropriate procedure
@


1.23
log
@changes required by petsc release 3.8
@
text
@      SUBROUTINE SCLSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,
     +                  NELEM,NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel)
C
C     $Id: sclsch.F,v 1.22 2016/11/10 11:25:13 abonfi Exp abonfi $
C
C     Purpose:
C     This routine selects the SCALAR scheme to be used,
C     depending on the flag ISCHEME.
C     The idea is to pass the schemes as subroutines
C     at the uppermost level (i.e. at the non-linear iteration
C     loop) to avoid multiple IFs inside the innermost loop 
C     over the elements.
C
C
#include "petsc/finclude/petscvec.h"
#include "petsc/finclude/petscmat.h"
              use petscvec
              use petscmat
C
      IMPLICIT NONE
C
      Vec  DT,RHS
      Mat  A
C
      INTEGER NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,NFACE,
     &NBFAC
      INTEGER NERR,IOPT
      DOUBLE PRECISION X(*)
C
      INCLUDE 'flags.com'
C
C     On entry:
C     --------
C
C     NDIM    dimension of the space (2 or 3)
C     NOFVERT number of vertices per element (=NDIM+1, since
C             only triangles or tetrahedra are allowed)
C     NOFVAR  number of variables (degrees of freedom)
C             in each meshpoint
C     NTURB   number of variables (degrees of freedom)
C             in each meshpoint for the turbulence model
C     NPOIN   no. of interior (processor owned) meshpoints; 
C             global number of meshpoints in the uni-processor case
C     NGHOST  no. of ghost meshpoints on the current processor; 
C             0 the uni-processor case
C     NELEM   no. of processor owned elements (triangles/tetrahedra);
C             global number of elements in the uni-processor case
C     NFACE   number of edges/faces in the mesh for the current 
C             processor (multi-processor case) or global number 
C             of edges/faces in the mesh (uni-processor case).
C     NBFAC   no. of processor owned boundary faces/edges;
C             global number of boundary faces/edges
C             in the uni-processor case.
C
      EXTERNAL EulerModel,NSModel
C
      EXTERNAL N_scheme,LDA_scheme,PSI_scheme,NL_Scheme,FCT_scheme,
     + LW_scheme,LW2_scheme,NL2_scheme,NS_scheme,SUPG_scheme,FV_scheme,
     & LDA2_scheme,LDASqr_scheme,SDK_scheme
C
      CHARACTER*38 ERRMSG
C
      DATA ERRMSG(1:32)/'SUBR. SCLSCH, NO SUCH ISCHEME = '/
C
C     Executable Statements ..
C
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13,14),ISCHEME
      GOTO 9999

C
    1 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,N_scheme)
      RETURN

    2 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,PSI_scheme)
      RETURN
    3 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,LDA_scheme)
      RETURN

    4 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,NL_scheme)
      RETURN

    5 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,FV_scheme)
      RETURN

    6 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,FCT_scheme)
      RETURN

    7 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,NL2_scheme)
      RETURN
    8 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,LW_scheme)
      RETURN
    9 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,NS_scheme)
      RETURN
   10 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,SUPG_scheme)
      RETURN
   11 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,LDA2_scheme)
      RETURN
   12 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,LW2_scheme)
      RETURN
   13 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,
     +            LDASqr_scheme)
      RETURN 
   14 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NPNOD,NELEM,
     +            NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel,
     +            SDK_scheme)
      RETURN
C
 9999 WRITE(ERRMSG(33:38),FMT="(I6.6)")ISCHEME
      NERR = 1
      IOPT = 1
      CALL SETERR(ERRMSG,38,NERR,IOPT)
C
      END
@


1.22
log
@changed the location of petsc's header files
when migrating to version 3.6
@
text
@d4 1
a4 3
C     $Id: sclsch.F,v 1.21 2011/09/16 07:19:48 abonfi Exp abonfi $
C
      IMPLICIT NONE
a14 1
#include "petsc/finclude/petscsys.h"
d17 4
@


1.21
log
@Changed PETSc header file to comply with version 3.1
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.20 2011/03/30 09:02:19 abonfi Exp abonfi $
d17 3
a19 3
#include "finclude/petscsys.h"
#include "finclude/petscvec.h"
#include "finclude/petscmat.h"
@


1.20
log
@added Sidilkover's scheme
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.19 2009/06/11 13:10:58 abonfi Exp $
d17 1
a17 1
#include "finclude/petsc.h"
@


1.19
log
@location of PETSc include file ahs chanegd with release 3.0.0
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.18 2009/06/11 08:57:55 abonfi Exp abonfi $
d58 1
a58 1
     & LDA2_scheme,LDASqr_scheme
d66 1
a66 1
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13),ISCHEME
d114 4
@


1.18
log
@added LDA square scheme
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.17 2008/05/12 07:12:44 abonfi Exp abonfi $
d17 3
a19 3
#include "include/finclude/petsc.h"
#include "include/finclude/petscvec.h"
#include "include/finclude/petscmat.h"
@


1.17
log
@added LW2 (un-steady) Lax Wendroff scheme
@
text
@d1 2
a2 2
      SUBROUTINE SCLSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,
     +                  NFACE,NBFAC,X,DT,RHS,A,EulerModel,NSModel)
d4 1
a4 1
C     $Id: sclsch.F,v 1.16 2005/07/17 19:19:00 aldo Exp abonfi $
d24 2
a25 1
      INTEGER NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,NBFAC
d27 1
a27 1
      DOUBLE PRECISION X(NOFVAR*NPOIN)
d58 1
a58 1
     & LDA2_scheme
d66 1
a66 1
      GOTO (1,2,3,4,5,6,7,8,9,10,11,12),ISCHEME
d70 2
a71 2
    1 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,N_scheme)
d74 2
a75 2
    2 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,PSI_scheme)
d77 2
a78 2
    3 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,LDA_scheme)
d81 2
a82 2
    4 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,NL_scheme)
d85 2
a86 2
    5 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,FV_scheme)
d89 2
a90 2
    6 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,FCT_scheme)
d93 2
a94 2
    7 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,NL2_scheme)
d96 2
a97 2
    8 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,LW_scheme)
d99 2
a100 2
    9 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,NS_scheme)
d102 2
a103 2
   10 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,SUPG_scheme)
d105 2
a106 2
   11 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,LDA2_scheme)
d108 6
a113 2
   12 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,
     +            NBFAC,X,DT,RHS,A,EulerModel,NSModel,LW2_scheme)
@


1.16
log
@add the LDA2 scheme
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.15 2004/12/20 14:38:09 aldo Exp abonfi $
d56 1
a56 1
     + LW_scheme,NL2_scheme,NS_scheme,SUPG_scheme,FV_scheme,
d65 1
a65 1
      GOTO (1,2,3,4,5,6,7,8,9,10,11),ISCHEME
d107 3
@


1.15
log
@add a new scheme
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.14 2001/10/17 15:35:47 abonfi Exp aldo $
d56 2
a57 1
     +         LW_scheme,NL2_scheme,NS_scheme,SUPG_scheme,FV_scheme
d65 1
a65 1
      GOTO (1,2,3,4,5,6,7,8,9,10),ISCHEME
d104 3
@


1.14
log
@add NS scheme N scheme with source term treatment
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.13 2000/11/22 14:34:49 aldo Exp abonfi $
d56 1
a56 1
     +         LW_scheme,NL2_scheme,NS_scheme
d64 1
a64 1
      GOTO (1,2,3,4,5,6,7,8,9),ISCHEME
d83 3
a85 1
    5 GOTO 9999
d100 3
@


1.13
log
@new scalar scheme NL2
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.12 2000/10/20 08:33:41 aldo Exp aldo $
d56 1
a56 1
     +         LW_scheme,NL2_scheme
d64 1
a64 1
      GOTO (1,2,3,4,5,6,7,8),ISCHEME
d95 3
@


1.12
log
@add the NS routine among the arguments
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.11 2000/08/18 14:03:45 aldo Exp aldo $
d56 1
a56 1
     +         LW_scheme
d89 3
a91 1
    7 GOTO 9999
@


1.11
log
@just moved some stmts. to ensure all variables
are defined
@
text
@d2 1
a2 1
     +                  NFACE,NBFAC,X,DT,RHS,A,Model)
d4 1
a4 1
C     $Id: sclsch.F,v 1.10 2000/08/17 09:14:36 aldo Exp aldo $
d18 2
a19 2
#include "include/finclude/vec.h"
#include "include/finclude/mat.h"
d53 1
a53 1
      EXTERNAL Model
d69 1
a69 1
     +            NBFAC,X,DT,RHS,A,Model,N_scheme)
d73 1
a73 1
     +            NBFAC,X,DT,RHS,A,Model,PSI_scheme)
d76 1
a76 1
     +            NBFAC,X,DT,RHS,A,Model,LDA_scheme)
d80 1
a80 1
     +            NBFAC,X,DT,RHS,A,Model,NL_scheme)
d86 1
a86 1
     +            NBFAC,X,DT,RHS,A,Model,FCT_scheme)
d91 1
a91 1
     +            NBFAC,X,DT,RHS,A,Model,LW_scheme)
@


1.10
log
@add among the arguments of the call the array
where the residual has to be evaluated; this
is done to be able to use the PETSc TS component
in a future release
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.9 2000/08/17 08:45:26 aldo Exp aldo $
d23 3
a28 3
C
      INTEGER NDIM,NOFVERT,NOFVAR,NTURB,NPOIN,NGHOST,NELEM,NFACE,NBFAC
      INTEGER NERR,IOPT
@


1.9
log
@replaced a STOP by a call to SETERR
@
text
@d2 1
a2 1
     +                  NFACE,NBFAC,DT,RHS,A,Model)
d4 1
a4 1
C     $Id: sclsch.F,v 1.8 2000/06/23 16:44:49 aldo Exp aldo $
d23 1
d69 1
a69 1
     +            NBFAC,DT,RHS,A,Model,N_scheme)
d73 1
a73 1
     +            NBFAC,DT,RHS,A,Model,PSI_scheme)
d76 1
a76 1
     +            NBFAC,DT,RHS,A,Model,LDA_scheme)
d80 1
a80 1
     +            NBFAC,DT,RHS,A,Model,NL_scheme)
d86 1
a86 1
     +            NBFAC,DT,RHS,A,Model,FCT_scheme)
d91 1
a91 1
     +            NBFAC,DT,RHS,A,Model,LW_scheme)
@


1.8
log
@add NTURB to the calling sequence for MATSCH
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.7 2000/03/24 15:15:11 aldo Exp aldo $
d27 1
d94 3
a96 2
      CALL SETERR(ERRMSG,38,1,2)
      STOP
@


1.7
log
@add scalar LW scheme
@
text
@d1 2
a2 2
      SUBROUTINE SCLSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
     +                  NBFAC,DT,RHS,A,Model)
d4 1
a4 1
C     $Id: sclsch.F,v 1.6 1999/12/27 09:20:28 aldo Exp $
d26 1
a26 1
      INTEGER NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,NBFAC
d36 2
d66 1
a66 1
    1 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
d70 1
a70 1
    2 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
d73 1
a73 1
    3 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
d77 1
a77 1
    4 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
d83 1
a83 1
    6 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
d88 1
a88 1
    8 CALL MATSCH(NDIM,NOFVERT,NOFVAR,NPOIN,NGHOST,NELEM,NFACE,
@


1.6
log
@some cleanup
@
text
@d4 1
a4 1
C     $Id: sclsch.F,v 1.5 1999/08/11 18:15:42 aldo Exp aldo $
d51 2
a52 1
      EXTERNAL N_scheme,LDA_scheme,PSI_scheme,NL_Scheme,FCT_scheme
d60 1
a60 1
      GOTO (1,2,3,4,5,6,7),ISCHEME
a79 1
      RETURN
d86 3
@


1.5
log
@call for the FCT scheme
@
text
@d1 2
a2 2
      SUBROUTINE SCLSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,
     +                  RHS,A,Model)
d4 1
a4 1
C     This routine selects the SCALAR scheme to be used ..
d6 1
d8 7
a14 1
C     $Id$
a15 1
      IMPLICIT NONE
d26 22
a47 1
      INTEGER DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC
d51 3
d55 1
a55 3
      EXTERNAL N_scheme,LDA_scheme,PSI_scheme,NL_Scheme,FCT_scheme
C    ,PSI_scheme,LDA_scheme,NL_scheme,FV_scheme,
C    +FVL1_scheme,FVL2_scheme
d57 1
a57 1
C     .. Executable Statements ..
d60 1
a61 2
  999 CALL SETERR(27HINVALID -ISCHEME- IN SCLSCH,999,2)
      STOP
d63 2
a64 2
    1 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,RHS,A,
     +            Model,N_scheme)
d67 2
a68 2
    2 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,RHS,A,
     +            Model,PSI_scheme)
d70 2
a71 3
C   3 STOP 'Invalid ISCHEME'
    3 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,RHS,A,
     +            Model,LDA_scheme)
d74 2
a75 2
    4 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,RHS,A,
     +            Model,NL_scheme)
d78 1
a78 2
    5 STOP 'Invalid ISCHEME'
C   5 CALL MATSCH(Model,FV_scheme)
d81 2
a82 2
    6 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,DT,RHS,A,
     +            Model,FCT_scheme)
d85 5
a89 3
    7 STOP 'Invalid ISCHEME'
C   7 CALL MATSCH(Model,FVL2_scheme)
      RETURN
@


1.4
log
@Add automatic identification flag
@
text
@d25 1
a25 1
      EXTERNAL N_scheme,LDA_scheme,PSI_scheme,NL_Scheme
d56 2
a57 2
    6 STOP 'Invalid ISCHEME'
C   6 CALL MATSCH(Model,FVL1_scheme)
@


1.3
log
@Include files path for PETSC fortran header files
has been changed to comply to rev. 2.0.22 of PETSc
@
text
@a0 3
C
C ------------------------------ + ------------------------------
C
d5 3
@


1.2
log
@PETSc version
@
text
@d11 3
a13 3
#include "include/FINCLUDE/petsc.h"
#include "include/FINCLUDE/vec.h"
#include "include/FINCLUDE/mat.h"
@


1.1
log
@Initial revision
@
text
@d4 2
a5 2
      SUBROUTINE SCLSCH( DIM, NOFVERT, NOFVAR, NPOIN, NELEM,
     &NFACE, NBFAC, Model )
d7 1
a7 1
C     .. This routine selects the SCALAR scheme to be used ..
d11 3
a13 1
C     .. Commons ..
d15 2
a16 1
      INCLUDE 'flags.com' 
d18 1
a18 1
C     .. Scalar Arguments ..
d20 1
a20 3
      INTEGER DIM, NOFVERT, NOFVAR, NPOIN, NELEM, NFACE, NBFAC
C
C     .. External Arguments ..
a23 1
C     .. External Subroutines ..
d31 2
a32 1
      GOTO(1,2,3,4,5,6,7),ISCHEME
d36 2
a37 2
    1 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,
     &Model,N_scheme)
d39 3
a41 2
    2 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,
     &Model,PSI_scheme)
d44 2
a45 2
    3 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,
     &Model,LDA_scheme)
d47 3
a49 2
    4 CALL MATSCH(DIM,NOFVERT,NOFVAR,NPOIN,NELEM,NFACE,NBFAC,
     &Model,NL_scheme)
d51 1
d55 1
d59 1
@
