head	1.30;
access
	tesistim;
symbols
	release3_14_0:1.30
	release3_13_0:1.30
	release3_12_0:1.30
	release3_11_0:1.30
	release3_10_0:1.30
	release3_8_0:1.30
	release3_7_1:1.29
	release3_7_0:1.28
	release3_4_5:1.27
	release3_4_4:1.27
	release3_4_3:1.25
	release3_4_2:1.24
	release3_4_1:1.24
	release3_4_0:1.23
	release3_3_5:1.23
	release3_3_4:1.22
	release3_3_3:1.22
	release3_3_2:1.21
	release3_3_1:1.21
	release3_3_0:1.20;
locks
	abonfi:1.30; strict;
comment	@c @;


1.30
date	2020.04.23.09.51.45;	author abonfi;	state Exp;
branches;
next	1.29;

1.29
date	2020.03.28.09.41.59;	author abonfi;	state Exp;
branches;
next	1.28;

1.28
date	2016.11.10.11.25.13;	author abonfi;	state Exp;
branches;
next	1.27;

1.27
date	2014.03.21.13.35.15;	author abonfi;	state Exp;
branches;
next	1.26;

1.26
date	2014.03.21.13.19.49;	author abonfi;	state Exp;
branches;
next	1.25;

1.25
date	2013.09.17.09.57.31;	author abonfi;	state Exp;
branches;
next	1.24;

1.24
date	2013.06.07.15.30.07;	author abonfi;	state Exp;
branches;
next	1.23;

1.23
date	2013.05.02.10.52.32;	author abonfi;	state Exp;
branches;
next	1.22;

1.22
date	2013.02.05.12.32.39;	author tesistim;	state Exp;
branches;
next	1.21;

1.21
date	2013.01.26.11.49.51;	author abonfi;	state Exp;
branches;
next	1.20;

1.20
date	2012.04.03.12.07.47;	author abonfi;	state Exp;
branches;
next	1.19;

1.19
date	2011.09.16.07.19.48;	author abonfi;	state Exp;
branches;
next	1.18;

1.18
date	2009.06.11.13.10.58;	author abonfi;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.11.08.51.02;	author abonfi;	state Exp;
branches;
next	1.16;

1.16
date	2008.02.22.11.04.15;	author abonfi;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.14.10.14.35;	author abonfi;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.20.08.53.46;	author abonfi;	state Exp;
branches;
next	1.13;

1.13
date	2005.12.27.11.49.19;	author abonfi;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.22.11.03.52;	author abonfi;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.03.13.18.49;	author abonfi;	state Exp;
branches;
next	1.10;

1.10
date	2005.09.09.08.47.41;	author abonfi;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.09.19.35.42;	author aldo;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.08.11.04.48;	author abonfi;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.08.03.37.30;	author abonfi;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.25.06.03.39;	author abonfi;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.14.08.57.44;	author abonfi;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.21.10.03.39;	author abonfi;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.19.09.55.54;	author abonfi;	state Exp;
branches;
next	1.2;

1.2
date	2001.07.04.06.48.26;	author abonfi;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.27.10.31.06;	author abonfi;	state Exp;
branches;
next	;


desc
@ghost cell boundary conditions for subsonic
inflow/outflow
@


1.30
log
@calls to MatSetValues and VecSetValues had to be modified
following petsc release 3.8
@
text
@      SUBROUTINE GHOST2(BC28,ICELNOD,ICELFAC,VFACNOR,XYZDOT,VOL,ZROE, 
     &   VCORG,RCLR,ZCLB,STIFEL,NODRES,NEWRES,VCZ,VCDZ,VCB,
     &   NELEM,NPOIN,NGHOST,NPNOD,NDIM,NOFVERT,NOFVAR,
     &   IBNDFAC,NBFAC,KLIST,VLIST,PetscVecDT,PetscVecRHS,PetscMatA)
 
C
C     Purpose: inflow/outflow boundary conditions;
C              this routine creates a dummy element for each
C              vertex of a boundary face
C
C
C     $Id: ghost2.F,v 1.29 2020/03/28 09:41:59 abonfi Exp abonfi $
C
C
C
C
#include "petsc/finclude/petscvec.h"
#include "petsc/finclude/petscmat.h"
      use petscvec
      use petscmat
      IMPLICIT NONE
C
      Vec PetscVecDT,PetscVecRHS
      Mat PetscMatA
C
      INCLUDE 'paramt.h'
      INCLUDE 'constants.h'
      INCLUDE 'implicit.h'
      INCLUDE 'bnd.h'
      INCLUDE 'bnd.com'
      INCLUDE 'ibc2.com'
      INCLUDE 'ibc8.com'
      INCLUDE 'dofs.com'
      INCLUDE 'stream.com'
      INCLUDE 'flags.com'
      INCLUDE 'periodic.com'
      INCLUDE 'newtoneps.com'
      INCLUDE 'time.com'
      INTEGER NITEMS
      PARAMETER(NITEMS=nVarsInlet*MAXNOFVERT)
C
      INTEGER MY_PE
      COMMON/MPICOM/MY_PE
C
C#define PRINT
C
C     .. Scalar Arguments ..
      INTEGER NBFAC,NDIM,NELEM,NPOIN,NGHOST,NPNOD,NOFVAR,NOFVERT
C     ..
C     .. Subroutine Arguments ..
      EXTERNAL BC28
C     ..
C     .. Array Arguments ..
      INTEGER ICELNOD(NOFVERT,NELEM),ICELFAC(NOFVERT,NELEM),
     &KLIST(NLIST),IBNDFAC(3,NBFAC)
      DOUBLE PRECISION VFACNOR(NDIM,*),XYZDOT(NDIM,*),VOL(NELEM),
     &ZROE(NOFVAR,*),VCORG(NDIM,NPOIN),RCLR(*),ZCLB(NCL,*), ! here ZCLB is transposed
     &VLIST(nVarsInlet,NLIST),STIFEL(NOFVAR,NOFVAR,NOFVERT,NOFVERT), 
     &NODRES(NOFVAR,NOFVERT),NEWRES(NOFVAR,NOFVERT), 
     &VCZ(NOFVAR,NOFVERT),VCDZ(NOFVAR,NOFVERT),VCB(NDIM,NOFVERT)
C     ..
C     ..
C     .. Local Scalars ..
      DOUBLE PRECISION VOLUME(MAXTIMLEVS+1),EPS
      INTEGER IVERT,IBC,ICLOR,IELEM,IFACE,N,IFAIL,I,J,LOCA,LOCB,
     +IVAR,JVAR,JVERT,IV,JV,NP
      LOGICAL COMPRESSIBLE,LWK,PLASMA
      INTEGER NERR,IOPT
      CHARACTER*72 ERRMSG
      PARAMETER(NERR = 5, IOPT = 1)
C     ..
C     .. Local Arrays ..
      DOUBLE PRECISION VCN(3*MAXNOFVERT),TSTEP(MAXNOFVAR*MAXNOFVERT),
     +DUMMY(MAX_NOFVERT_SQR*MAX_NOFVAR_SQR),PCN(nVarsInlet,MAXNOFVERT),
     &WORK(MAXNOFVAR*MAXNOFVERT)
      INTEGER ICN(MAXNOFVERT),ICN2(MAXNOFVERT)
C
C     VCN(1:NDIM,1:NOFVERT)
C     VCZ(1:NDIM,1:NOFVERT)
C     TSTEP(NOFVAR,1:NOFVERT-1)
C     NODRES(1:NOFVAR,1:NOFVERT-1)
C     STIFEL(1:NOFVAR,1:NOFVAR,1:NOFVERT-1)
C
C     ..
C     .. External Functions ..
      DOUBLE PRECISION DDOT,DNRM2
      INTEGER ICYCL
      EXTERNAL DDOT,DNRM2,ICYCL
C     ..
C     .. External Subroutines ..
      EXTERNAL CELPTR,DAXPY,DCOPY,DGEMV,DSWAP
C     ..
C     .. Intrinsic Functions ..
      INTRINSIC ABS,IABS,REAL
C     ..
C     ..
C     .. Statement Functions ..
      INTEGER IDX
C     ..
      DATA PCN/NITEMS*ZERO/
C     ..
C     .. Statement Function definitions ..
C
C
      IDX(I,J,N) = (I-1)*N + J
C     ..
C
C
      COMPRESSIBLE = ABS(KAN) .EQ. 4
      PLASMA = ABS(KAN) .EQ. 3
      NP = NPOIN + NGHOST + NPNOD
caldo
      call dinit(nofvar*nofvar*nofvert*nofvert,ZERO,stifel,1)
      call dinit(nofvar*nofvert,ZERO,nodres,1)
      call dinit(nofvar*nofvert,ZERO,newres,1)
C
C     fill in PCN with default values whenever there is no
C     file with an inflow profile
C
C     IF(.NOT.LREAD)THEN
         DO 3 I = 1, NOFVERT
            PCN(1,I) = ONE ! total pressure/ref pressure
            PCN(2,I) = ONE ! total temperature/ref temperature
            PCN(3,I) = POUTLET
            PCN(4,I) = FLOWDIR(1)
            PCN(5,I) = FLOWDIR(2)
            PCN(6,I) = FLOWDIR(3)
    3    CONTINUE
C     ENDIF
C
      DO 100 IFACE = 1,NBFAC ! loop over ALL bndry faces
C
          IELEM = IBNDFAC(1,IFACE)
          IVERT = IBNDFAC(2,IFACE)
          ICLOR = IBNDFAC(3,IFACE)
C
          IBC = ICOLOR(ICLOR,1) ! colours for the mean flow equations
C
C     Apply (inflow/outflow) boundary conditions iff:
C
C     IBC = 0 subsonic inlet
C     IBC = 2 subsonic outlet
C
          IF (.NOT.(IBC.EQ.BC_TYPE_SUBS_OUTLET.OR.
     &              IBC.EQ.BC_TYPE_SUBS_INLET))GOTO 100
C
          CALL CELPTR(IELEM, NELEM, ICELNOD, ICELFAC, VOL, ZROE,
     +                VFACNOR, XYZDOT, NDIM, NOFVERT, NOFVAR, NP, ICN,
     3                VCZ, VCN, VCB, VOLUME)
C
C      ugly!ugly!ugly!ugly!ugly!ugly!ugly!ugly!
C
C      ICN2() keeps the "original" cell to node pointer:
C             NO re-mapping due to periodic bcs.
C
          DO 13 I = 1, NOFVERT
              ICN2(I) = ICELNOD(I,IELEM+NELEM)
   13     CONTINUE
C      ugly!ugly!ugly!ugly!ugly!ugly!ugly!ugly!
C
      INCLUDE 'ptest.f'
C
C     put the vertex facing the boundary face in the
C     NOFVERT-th position
C
          IF(IVERT.NE.NOFVERT)THEN
              CALL DSWAP(NOFVAR,VCZ(1,IVERT),1,VCZ(1,NOFVERT),1)
              LOCA = IDX(IVERT,1,NDIM)
              LOCB = IDX(NOFVERT,1,NDIM)
              CALL DSWAP(NDIM,VCN(LOCA),1,VCN(LOCB),1)
              IF(LALE)CALL DSWAP(NDIM,VCB(1,IVERT),1,VCB(1,NOFVERT),1)
              LOCA = ICN(NOFVERT)
              LOCB = ICN2(NOFVERT)
              ICN(NOFVERT) = ICN(IVERT)
              ICN2(NOFVERT) = ICN2(IVERT)
              ICN(IVERT) = LOCA
              ICN2(IVERT) = LOCB
              LWK = PFLAG(NOFVERT)
              PFLAG(NOFVERT) = PFLAG(IVERT)
              PFLAG(IVERT) = LWK
          ENDIF
!         write(6,*)(icn(i),i=1,nofvert)
!         write(6,*)(icn2(i),i=1,nofvert)
C
C     find inlet profiles for the vertices of the
C     current boundary face
C
#ifdef PRINT
      CALL R8Mat_Print('General',' ',nVarsInlet,NLIST,VLIST,
     +nVarsInlet,'VLIST matrix within ghost2 ',IFAIL)
#endif
          IF(LREAD(1).AND.IBC.EQ.BC_TYPE_SUBS_INLET)
     &    CALL SUBYY(ICN2,NOFVERT,KLIST,
     +               VLIST,nVarsInlet,NLIST,PCN)
!         write(6,*)'IBC = ',iface,ibc
!     CALL R8Mat_Print('General',' ',nVarsInlet,NOFVert,PCN,
!    +nVarsInlet,'PCN before SUBYZ in ghost2 ',IFAIL)
          IF(RAD_EQUI.AND.IBC.EQ.BC_TYPE_SUBS_OUTLET)THEN
              CALL SUBYZ(ICN2,NOFVERT,VCORG,NDIM,
     +               PCN,nVarsInlet,RCLR,ZCLB,NCL)
          ELSE
              DO 23 I = 1, NOFVERT-1
                  PCN(3,I) = POUTLET
   23         CONTINUE
          ENDIF
 
!     CALL R8Mat_Print('General',' ',nVarsInlet,NOFVert,PCN,
!    +nVarsInlet,'PCN after SUBYZ in ghost2 ',IFAIL)
C
#ifdef PRINT
      if(ibc.EQ.BC_TYPE_SUBS_OUTLET)then
      write(6,*)' ibc is ',ibc
      CALL R8Mat_Print('General',' ',nVarsInlet,NOFVERT,PCN,
     +nVarsInlet,'PCN matrix within ghost2 ',IFAIL)
      endif
#endif
C
C     compute residual
C
          CALL DINIT(NOFVAR*(NOFVERT-1),ZERO,TSTEP,1) 
          CALL BC28(IELEM,VCN,VCZ,VCB,PCN,STIFEL,NODRES,TSTEP, NDIM,
     +    NOFVERT,NOFVAR,IBC)
c
#ifdef PRINT
          CALL R8Mat_Print('General',' ',Nofvar,Nofvert,nodres, Nofvar,
     +    'nodres ',IFAIL)
#endif
C
          IF(.NOT.TIMEIMPL)GOTO 50
#if 0
          do ivert=1,nofvert-1
              write(6,*)ielem,ivert,ivert
              CALL R8Mat_Print('General',' ',Nofvar,Nofvar,STIFEL(1,1,
     +        IVERT,1), Nofvar,'Picard matrix ',IFAIL)
          enddo
#endif
          IF(NEWTON)THEN
C
C     Compute Jacobian by finite differences
C
          DO 85 IVERT = 1, NOFVERT-1
              DO 15 IVAR = 1, NOFVAR
                  CALL DCOPY(NOFVAR*NOFVERT,VCZ,1,VCDZ,1)
                  IF(COMPRESSIBLE)THEN
                     CALL PARM_TO_CONS(VCZ (1,IVERT),NDIM,NOFVAR,1,
     &                                 .FALSE.,IFAIL)
                     CALL PARM_TO_CONS(VCDZ(1,IVERT),NDIM,NOFVAR,1,
     &                                 .FALSE.,IFAIL)     
                  ELSEIF(PLASMA)THEN
                     CALL PARM_TO_CONS4Ar(VCZ (1,IVERT),NDIM,NOFVAR,1,
     &          .FALSE.,IFAIL)
                     CALL PARM_TO_CONS4Ar(VCDZ(1,IVERT),NDIM,NOFVAR,1,
     &          .FALSE.,IFAIL)
                  ENDIF
                  EPS = ROOT_MACHINE_EPS*MAX(ABS(VCZ(IVAR,IVERT)),ONE)*
     +            SIGN(ONE,VCZ(IVAR,IVERT))
                  VCDZ(IVAR,IVERT) = VCZ(IVAR,IVERT) + EPS
                  IF(COMPRESSIBLE)THEN
                     CALL CONS_TO_PARM(VCZ (1,IVERT),NDIM,NOFVAR,1,
     &                                 .FALSE.,IFAIL)
                     IF(IFAIL.NE.0)THEN
                        WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',MY_PE,
     &                  "(1)"
                        CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                     ENDIF  
                     CALL CONS_TO_PARM(VCDZ(1,IVERT),NDIM,NOFVAR,1,
     &                                 .FALSE.,IFAIL)
                     IF(IFAIL.NE.0)THEN
                        WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',MY_PE,
     &                  "(2)"
                        CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                     ENDIF   ! ifail
                  ELSEIF(PLASMA)THEN
                     CALL CONS_TO_PARM4Ar(VCZ (1,IVERT),NDIM,NOFVAR,1,
     &                                    .FALSE.,IFAIL)
                     IF(IFAIL.NE.0)THEN
                        WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',MY_PE,
     &                  "(1)"
                        CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                     ENDIF
                     CALL CONS_TO_PARM4Ar(VCDZ(1,IVERT),NDIM,NOFVAR,1,
     &                                    .FALSE.,IFAIL)
                     IF(IFAIL.NE.0)THEN
                        WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',MY_PE,
     &                  "(2)"
                        CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                     ENDIF   ! ifail
              ENDIF ! compressible or plasma
C
#if 0
                  write(6,*)'ivert,ivar ibc ',ivert,ivar,ibc
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,
     +            vcz(1,1),Nofvar,'Z ',IFAIL)
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,
     +            vcdz(1,1),Nofvar,'DZ ',IFAIL)
c
#endif
C
                  CALL BC28(IELEM,VCN,VCDZ,VCB,PCN,DUMMY,NEWRES,WORK,
     +            NDIM,NOFVERT,NOFVAR,IBC)
C
#if 0
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,nodres,
     +                             Nofvar,'nodres ',IFAIL)
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,newres,
     +                             Nofvar,'newres ',IFAIL)
                  call dcopy(Nofvar*Nofvert,nodres,1,dummy,1)
                  call matsub(dummy,nofvar,newres,nofvar,nofvar,nofvert)
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,dummy,
     +                             Nofvar,'newres -nodres ',IFAIL)
#endif
C
                  DO 95 JVAR = 1, NOFVAR
                      DO 95 JVERT = 1, NOFVERT-1
                          STIFEL(JVAR,IVAR,JVERT,IVERT) = -(NEWRES
     +                    (JVAR,JVERT)-NODRES(JVAR,JVERT))/EPS
C
   95             CONTINUE
   15         CONTINUE ! end loop over vars
#if 0
      do 85 jvert=1,nofvert-1
           write(6,*)'I= ',ivert,' J = ',jvert
           CALL R8Mat_Print('General',' ',Nofvar,Nofvar,stifel(1,1,
     &     ivert,jvert), Nofvar,'Jacobian Matrix in Ghost2 (3) ',IFAIL)
#endif
C
   85     CONTINUE ! loop over vertices
C
C     Insert FD jacobian matrix into the global matrix
C
          IF( PERIODIC_MESH .AND. ANNULAR )
     &    CALL ROTATECIJ(STIFEL,NOFVAR,NOFVERT,NOFVERT-1,NOFVERT-1)
C
          DO IVERT = 1,NOFVERT-1
              DO JVERT = 1,NOFVERT-1
                 CALL DCOPY(NOFVAR*NOFVAR,STIFEL(1,1,IVERT,JVERT),1,
     &                      DUMMY,1)
#ifdef MPI
                  CALL MatSetValuesBlockedLocal(PetscMatA,1,ICN(IVERT),
     +            1,ICN(JVERT),DUMMY,ADD_VALUES,IFAIL)
 
#else
                  CALL MatSetValuesBlocked(PetscMatA,1,ICN(IVERT),1,
     +            ICN(JVERT),DUMMY,ADD_VALUES,IFAIL)
#endif
#if 0
                  if(ivert.EQ.jvert)then
                      write(6,*)ivert,jvert
                      CALL R8Mat_Print('General',' ',Nofvar,Nofvar,
     +                stifel(1,1,ivert,jvert), Nofvar,
     +                'Jacobian Matrix in Ghost2 (1)',IFAIL)
                  endif
#endif
            ENDDO
         ENDDO
C
      ELSEIF(PICARD)THEN
C
C     Insert Picard matrix into the global matrix
C
          IF( PERIODIC_MESH .AND. ANNULAR )
     &    CALL ROTATECIJ(STIFEL,NOFVAR,NOFVERT,NOFVERT-1,1)
C
C
          DO 25 IVERT = 1,NOFVERT-1
             CALL DCOPY(NOFVAR*NOFVAR,STIFEL(1,1,IVERT,1),1,
     &                      DUMMY,1)
C
#ifdef MPI
              CALL MatSetValuesBlockedLocal(PetscMatA,1,ICN(IVERT),1,
     +        ICN(IVERT),DUMMY,ADD_VALUES,IFAIL)
 
#else
              CALL MatSetValuesBlocked(PetscMatA,1,ICN(IVERT),1,
     +        ICN(IVERT),DUMMY,ADD_VALUES,IFAIL)
 
#endif
#if 0
              write(6,*)ielem,ivert,ivert
              CALL R8Mat_Print('General',' ',Nofvar,Nofvar,STIFEL(1,1,
     +        IVERT,1), Nofvar,'Jacobian in Ghost2 (2) ',IFAIL)
#endif
C
   25     CONTINUE
      ENDIF ! Picard
C
   50 CONTINUE
C
      INCLUDE 'rotaterhs2.f'
C
         CALL VecSetValuesBlocked(PetscVecDT,NOFVERT-1,ICN,TSTEP,
     +                             ADD_VALUES,IFAIL)
         CALL DCOPY(NOFVAR*(NOFVERT-1),NODRES,1,DUMMY,1)
         CALL VecSetValuesBlocked(PetscVecRHS,NOFVERT-1,ICN,DUMMY,
     +                             ADD_VALUES,IFAIL)
C
  100 CONTINUE
      RETURN
  105 FORMAT('CONS_TO_PARM failed when called from ',A10,' on PE # ',I4,
     &1X,A3)
      END
@


1.29
log
@renamed a call
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.28 2016/11/10 11:25:13 abonfi Exp abonfi $
a14 1
      IMPLICIT NONE
a16 1
#include "petsc/finclude/petscsys.h"
d19 3
d113 3
a115 3
      call dinit(nofvar*nofvar*nofvert*nofvert,0.d0,stifel,1)
      call dinit(nofvar*nofvert,0.d0,nodres,1)
      call dinit(nofvar*nofvert,0.d0,newres,1)
d131 1
a131 1
      DO 100 IFACE = 1,NBFAC
d233 2
a234 2
              CALL R8Mat_Print('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,
     +        1), Nofvar,'Picard matrix ',IFAIL)
d255 2
a256 2
                  EPS = ROOT_MACHINE_EPS*MAX(ABS(VCZ(IVAR,IVERT)),1.d0)*
     +            SIGN(1.d0,VCZ(IVAR,IVERT))
d292 4
a295 4
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,vcz(1,1),
     +            Nofvar,'Z ',IFAIL)
                  CALL R8Mat_Print('General',' ',Nofvar,Nofvert,vcdz(1,1),
     +            Nofvar,'DZ ',IFAIL)
d304 1
a304 1
     +            Nofvar,'nodres ',IFAIL)
d306 1
a306 1
     +            Nofvar,'newres ',IFAIL)
d310 1
a310 1
     +            Nofvar,'newres -nodres ',IFAIL)
d323 2
a324 2
           CALL R8Mat_Print('General',' ',Nofvar,Nofvar,stifel(1,1,ivert,
     &     jvert), Nofvar,'Jacobian Matrix in Ghost2 (3) ',IFAIL)
d334 4
a337 2
          DO 37 IVERT = 1,NOFVERT-1
              DO 37 JVERT = 1,NOFVERT-1
d340 1
a340 1
     +            1,ICN(JVERT),STIFEL(1,1,IVERT,JVERT),ADD_VALUES,IFAIL)
d344 1
a344 1
     +            ICN(JVERT),STIFEL(1,1,IVERT,JVERT),ADD_VALUES,IFAIL)
d349 2
a350 2
                      CALL R8Mat_Print('General',' ',Nofvar,Nofvar,stifel(1,
     +                1,ivert,jvert), Nofvar,
d354 2
a355 1
   37     CONTINUE
d366 2
d371 1
a371 1
     +        ICN(IVERT),STIFEL(1,1,IVERT,1),ADD_VALUES,IFAIL)
d375 1
a375 1
     +        ICN(IVERT),STIFEL(1,1,IVERT,1),ADD_VALUES,IFAIL)
d380 2
a381 2
              CALL R8Mat_Print('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,
     +        1), Nofvar,'Jacobian in Ghost2 (2) ',IFAIL)
d393 2
a394 1
         CALL VecSetValuesBlocked(PetscVecRHS,NOFVERT-1,ICN,NODRES,
@


1.28
log
@changed the location of petsc's header files
when migrating to version 3.6
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.27 2014/03/21 13:35:15 abonfi Exp abonfi $
d188 1
a188 1
      CALL X04CAF('General',' ',nVarsInlet,NLIST,VLIST,
d195 1
a195 1
!     CALL X04CAF('General',' ',nVarsInlet,NOFVert,PCN,
d206 1
a206 1
!     CALL X04CAF('General',' ',nVarsInlet,NOFVert,PCN,
d212 1
a212 1
      CALL X04CAF('General',' ',nVarsInlet,NOFVERT,PCN,
d224 1
a224 1
          CALL X04CAF('General',' ',Nofvar,Nofvert,nodres, Nofvar,
d232 1
a232 1
              CALL X04CAF('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,
d291 1
a291 1
                  CALL X04CAF('General',' ',Nofvar,Nofvert,vcz(1,1),
d293 1
a293 1
                  CALL X04CAF('General',' ',Nofvar,Nofvert,vcdz(1,1),
d302 1
a302 1
                  CALL X04CAF('General',' ',Nofvar,Nofvert,nodres,
d304 1
a304 1
                  CALL X04CAF('General',' ',Nofvar,Nofvert,newres,
d308 1
a308 1
                  CALL X04CAF('General',' ',Nofvar,Nofvert,dummy,
d322 1
a322 1
           CALL X04CAF('General',' ',Nofvar,Nofvar,stifel(1,1,ivert,
d346 1
a346 1
                      CALL X04CAF('General',' ',Nofvar,Nofvar,stifel(1,
d374 1
a374 1
              CALL X04CAF('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,
@


1.27
log
@compilation error fix due to a missing include file
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.26 2014/03/21 13:19:49 abonfi Exp abonfi $
d18 3
a20 3
#include "finclude/petscsys.h"
#include "finclude/petscvec.h"
#include "finclude/petscmat.h"
@


1.26
log
@swaps the grid velocity in ALE calculations
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.25 2013/09/17 09:57:31 abonfi Exp abonfi $
d37 1
@


1.25
log
@VOLUME has become an array so that cell volumes at the previous
time instants can be stored
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.24 2013/06/07 15:30:07 abonfi Exp abonfi $
d169 1
@


1.24
log
@the array ICOLOR included from bnd.com has changed
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.23 2013/05/02 10:52:32 abonfi Exp abonfi $
d62 1
a62 1
      DOUBLE PRECISION VOLUME,EPS
@


1.23
log
@now includes dofs.com which stores the locations where the momentum
components and energy can be found
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.22 2013/02/05 12:32:39 tesistim Exp abonfi $
d135 1
a135 1
          IBC = ICOLOR(ICLOR)
@


1.22
log
@now transforms Z for Argon (bug fix)
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.21 2013/01/26 11:49:51 abonfi Exp tesistim $
d32 1
@


1.21
log
@changed the name of an included header file
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.20 2012/04/03 12:07:47 abonfi Exp abonfi $
d64 1
a64 1
      LOGICAL COMPRESSIBLE,LWK
d107 1
d241 9
a249 4
                      CALL PARM_TO_CONS( VCZ(1,IVERT),NDIM,
     &                                   NOFVAR,1,.FALSE.,IFAIL)
                      CALL PARM_TO_CONS(VCDZ(1,IVERT),NDIM,
     &                                   NOFVAR,1,.FALSE.,IFAIL)
d255 30
a284 15
                      CALL CONS_TO_PARM( VCZ(1,IVERT),NDIM,
     &                                   NOFVAR,1,.FALSE.,IFAIL)
                      IF(IFAIL.NE.0)THEN
                          WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',
     &                                               MY_PE,"(1)"
                          CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                      ENDIF   ! ifail
                      CALL CONS_TO_PARM(VCDZ(1,IVERT),NDIM,
     &                                   NOFVAR,1,.FALSE.,IFAIL)
                      IF(IFAIL.NE.0)THEN
                          WRITE(ERRMSG(1:64),FMT=105)'GHOST2____',
     &                                                MY_PE,"(2)"
                          CALL SETERR(ERRMSG(1:64),64,NERR,IOPT)
                      ENDIF   ! ifail
                  ENDIF
@


1.20
log
@changes needed to pass the grid velocity down to the lower level routines
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.19 2011/09/16 07:19:48 abonfi Exp abonfi $
d26 1
a26 1
      INCLUDE 'constants'
@


1.19
log
@Changed PETSc header file to comply with version 3.1
@
text
@d1 2
a2 2
      SUBROUTINE GHOST2(BC28,ICELNOD,ICELFAC,VFACNOR,VOL,ZROE, 
     &   VCORG,RCLR,ZCLB,STIFEL,NODRES,NEWRES,VCZ,VCDZ,
d12 1
a12 1
C     $Id: ghost2.F,v 1.18 2009/06/11 13:10:58 abonfi Exp abonfi $
d53 2
a54 2
      DOUBLE PRECISION VFACNOR(NDIM,*),VOL(NELEM),ZROE(NOFVAR,*),
     &VCORG(NDIM,NPOIN),RCLR(*),ZCLB(NCL,*), ! here ZCLB is transposed
d57 1
a57 1
     &VCZ(NOFVAR,NOFVERT),VCDZ(NOFVAR,NOFVERT)
d144 3
a146 1
     +    VFACNOR, NDIM, NOFVERT, NOFVAR, NP, ICN, VCZ, VCN, VOLUME)
d216 1
a216 1
          CALL BC28(IELEM,VCN,VCZ,PCN,STIFEL,NODRES,TSTEP, NDIM,
d274 1
a274 1
                  CALL BC28(IELEM,VCN,VCDZ,PCN,DUMMY,NEWRES,WORK,
@


1.18
log
@location of PETSc include file ahs chanegd with release 3.0.0
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.17 2009/06/11 08:51:02 abonfi Exp abonfi $
d18 1
a18 1
#include "finclude/petsc.h"
d185 1
a185 1
          IF(LREAD.AND.IBC.EQ.BC_TYPE_SUBS_INLET)
@


1.17
log
@now passing NPNOD among the arguments of the call
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.16 2008/02/22 11:04:15 abonfi Exp abonfi $
d18 3
a20 3
#include "include/finclude/petsc.h"
#include "include/finclude/petscvec.h"
#include "include/finclude/petscmat.h"
@


1.16
log
@improved error checking when calling CONS_TO_PARM
@
text
@d3 1
a3 1
     &   NELEM,NPOIN,NGHOST,NDIM,NOFVERT,NOFVAR,
d12 1
a12 1
C     $Id: ghost2.F,v 1.15 2007/11/14 10:14:35 abonfi Exp abonfi $
d45 1
a45 1
      INTEGER NBFAC,NDIM,NELEM,NPOIN,NGHOST,NOFVAR,NOFVERT
d63 1
a63 1
     +IVAR,JVAR,JVERT,IV,JV
d107 1
d144 1
a144 1
     +    VFACNOR, NDIM, NOFVERT, NOFVAR, ICN, VCZ, VCN, VOLUME)
@


1.15
log
@ROOT_MACHINE_EPS is now computed only once in the main
and stored in common STCOM
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.14 2007/02/20 08:53:46 abonfi Exp abonfi $
d39 3
d65 3
d238 1
a238 1
     &                                   NOFVAR,1,.FALSE.)
d240 1
a240 1
     &                                   NOFVAR,1,.FALSE.)
d247 6
a252 1
     &                                   NOFVAR,1,.FALSE.)
d254 6
a259 1
     &                                   NOFVAR,1,.FALSE.)
d365 2
@


1.14
log
@minor cosmetic changes
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.12 2005/10/22 11:03:52 abonfi Exp aldo $
d35 1
d58 1
a58 1
      DOUBLE PRECISION VOLUME,EPS,ROOT_MACHINE_EPS
a100 1
      ROOT_MACHINE_EPS=1.d-07
@


1.13
log
@an included common has been renamed
@
text
@d4 1
a4 1
     +   IBNDFAC,NBFAC,KLIST,VLIST,DT,RHS,A)
d12 1
a12 1
C     $Id: ghost2.F,v 1.12 2005/10/22 11:03:52 abonfi Exp abonfi $
d22 2
a23 2
      Vec DT,RHS
      Mat A
d64 2
a65 1
     +DUMMY(MAX_NOFVERT_SQR*MAX_NOFVAR_SQR),PCN(nVarsInlet,MAXNOFVERT)
d128 1
a128 1
C     Do NOT apply (inviscid) boundary conditions if:
d130 2
a131 4
C     IBC = 1 supersonic inlet
C     IBC = 3 supersonic outlet
C     IBC = 6 viscous wall
C     IBC = 7 prescribed velocity profile (maybe I should)
d215 1
a215 8
      INCLUDE 'rotaterhs2.f'
C
          CALL VecSetValuesBlocked(DT,NOFVERT-1,ICN,TSTEP,
     +                             ADD_VALUES,IFAIL)
          CALL VecSetValuesBlocked(RHS,NOFVERT-1,ICN,NODRES,
     +                             ADD_VALUES,IFAIL)
C
          IF(.NOT.TIMEIMPL)GOTO 100
d223 1
a223 1
          IF(PICARD)GOTO 50
d247 1
a247 1
                  write(6,*)'ivert,ivar eps ',ivert,ivar,eps
d255 1
a255 1
                  CALL BC28(IELEM,VCN,VCDZ,PCN,DUMMY,NEWRES,TSTEP,
a258 1
C     write(6,*)'ivert,ivar eps ',ivert,ivar,eps
a273 4
C     write(6,*)jvar,ivar,jvert,ivert
C     write(6,*)STIFEL(JVAR,IVAR,JVERT,IVERT)
C     write(6,*)NEWRES(JVAR,JVERT),NODRES(JVAR,JVERT),eps
C
d275 7
a281 5
   15         CONTINUE
C     do 85 jvert=1,nofvert-1
C          write(6,*)ivert,jvert
C          CALL X04CAF('General',' ',Nofvar,Nofvar,stifel(1,
C    +     1,ivert,jvert), Nofvar,'Jacobian Matrix ',IFAIL)
d287 2
a288 4
C     INCLUDE 'rotatecij2.f'
      IF( PERIODIC_MESH .AND. ANNULAR )
     &CALL ROTATECIJ(STIFEL,NOFVAR,NOFVERT,NOFVERT-1,NOFVERT-1)
C
d293 2
a294 2
                  CALL MatSetValuesBlockedLocal(A,1,ICN(IVERT),1, ICN
     +            (JVERT),STIFEL(1,1,IVERT,JVERT), ADD_VALUES, IFAIL)
d297 2
a298 2
                  CALL MatSetValuesBlocked(A,1,ICN(IVERT),1,ICN (JVERT),
     +            STIFEL(1,1,IVERT,JVERT),ADD_VALUES,IFAIL)
d304 2
a305 1
     +                1,ivert,jvert), Nofvar,'Jacobian Matrix ',IFAIL)
a308 1
          GOTO 100
d310 1
a310 1
   50     CONTINUE
d314 2
a315 3
C     INCLUDE 'rotatecij3.f'
      IF( PERIODIC_MESH .AND. ANNULAR )
     &CALL ROTATECIJ(STIFEL,NOFVAR,NOFVERT,NOFVERT-1,1)
d321 2
a322 2
              CALL MatSetValuesBlockedLocal(A,1,ICN(IVERT),1,ICN(IVERT),
     +        STIFEL(1,1,IVERT,1), ADD_VALUES,IFAIL)
d325 2
a326 2
              CALL MatSetValuesBlocked(A,1,ICN(IVERT),1,ICN(IVERT),
     +        STIFEL(1,1,IVERT,1), ADD_VALUES,IFAIL)
d332 1
a332 1
     +        1), Nofvar,'Jacobian ',IFAIL)
d336 10
@


1.12
log
@implemented c-lines
@
text
@d12 1
a12 1
C     $Id: ghost2.F,v 1.11 2005/10/03 13:18:49 abonfi Exp abonfi $
d29 1
a29 1
      INCLUDE 'bnd'
@


1.11
log
@changes required to implement periodic conditions
in an annular cascade
@
text
@d1 4
a4 3
      SUBROUTINE GHOST2(BC28,ICELNOD,ICELFAC,VFACNOR,VOL,ZROE, STIFEL,
     +NODRES,NEWRES,VCZ,VCDZ,NELEM,NPOIN,NGHOST,NDIM,NOFVERT,NOFVAR,
     +IBNDFAC,NBFAC,KLIST,VLIST,DT,RHS,A)
d12 1
a12 1
C     $Id: ghost2.F,v 1.10 2005/09/09 08:47:41 abonfi Exp abonfi $
d30 1
d50 1
d108 1
a108 1
      IF(.NOT.LREAD)THEN
d112 1
a112 1
            PCN(3,I) = 1.d38 ! unused (backward compatibility)
d117 1
a117 1
      ENDIF
d140 4
d182 14
d198 1
d202 1
d218 4
a221 4
          CALL VecSetValuesBlocked(DT,NOFVERT-1,ICN,TSTEP, ADD_VALUES,
     +    IFAIL)
          CALL VecSetValuesBlocked(RHS,NOFVERT-1,ICN,NODRES, ADD_VALUES,
     +    IFAIL)
d239 4
a242 4
                      CALL
     1                PARM_TO_CONS( VCZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
                      CALL
     1                PARM_TO_CONS(VCDZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
d248 4
a251 4
                      CALL
     1                CONS_TO_PARM( VCZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
                      CALL
     1                CONS_TO_PARM(VCDZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
@


1.10
log
@changes required to handle ANNULAR cascade flows
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.9 2005/08/09 19:35:42 aldo Exp abonfi $
d33 2
d62 1
a69 2
C
      INTEGER ICN(MAXNOFVERT)
d86 1
a86 1
C     DATA PCN/NN*ONE/
d136 5
d153 1
d155 1
d157 1
d162 2
d168 4
d173 8
a180 1
     &    CALL SUBYY(ICN,NOFVERT,KLIST,VLIST,nVarsInlet,NLIST,PCN)
d185 1
a185 1
          CALL BC28(IELEM,VCN,VCZ,PCN,ICN,STIFEL,NODRES,TSTEP, NDIM,
d217 1
a217 1
     1                PARM_TO_CONS(VCZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
d226 1
a226 1
     1                CONS_TO_PARM(VCZ(1,IVERT),NDIM,NOFVAR,1,.FALSE.)
d240 1
a240 1
                  CALL BC28(IELEM,VCN,VCDZ,PCN,ICN,DUMMY,NEWRES,TSTEP,
@


1.9
log
@fixed a bug introduced in the previous revision
PCN was set incorrectly whenever there was no file
with a prescribed profile
@
text
@d2 2
a3 2
     +NODRES,NEWRES,VCZ,VCDZ, NELEM,NDIM,NOFVERT,NOFVAR, IBNDFAC,NBFAC,
     +KLIST,VLIST,DT,RHS,A)
d11 1
a11 1
C     $Id: ghost2.F,v 1.8 2005/08/08 11:04:48 abonfi Exp aldo $
a26 1
C
d32 1
d37 1
a37 1
      INTEGER NBFAC,NDIM,NELEM,NOFVAR,NOFVERT
d53 3
a55 3
      INTEGER I,IBC,ICLOR,IELEM,IFACE,N, IFAIL,IVERT,J,LOCA,LOCB,IVAR,
     +JVAR,JVERT
      LOGICAL COMPRESSIBLE
d133 4
a136 3
          CALL CELPTR(IELEM, ICELNOD, ICELFAC, VOL, ZROE, VFACNOR, NDIM,
     +    NOFVERT, NOFVAR, ICN, VCZ, VCN, VOLUME)
 
d149 3
d171 2
d220 1
a220 1
c
d222 1
a222 1
c     write(6,*)'ivert,ivar eps ',ivert,ivar,eps
d244 13
a256 8
c     do 85 jvert=1,nofvert-1
c          write(6,*)ivert,jvert
c          CALL X04CAF('General',' ',Nofvar,Nofvar,stifel(1,
c    +     1,ivert,jvert), Nofvar,'Jacobian Matrix ',IFAIL)
   85     CONTINUE
caldo               goto 50
c     write(6,*)'**********************'
caldo
d279 8
@


1.8
log
@added new entries in the list of inlow bcs
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.7 2003/08/08 03:37:30 abonfi Exp $
a27 1
      INCLUDE 'nloc'
a35 6
C
      INCLUDE 'three'
C
      INTEGER NN
      PARAMETER(NN=nVarsInlet*MAXNOFVERT)
C
d37 1
a37 1
      INTEGER NBFAC,NDIM,NELEM,NOFVAR,NOFVERT,NPOIN
d59 1
a59 1
     +DUMMY(MAX_NOFVERT_SQR*MAX_NOFVAR_SQR),PCN(NN)
a66 1
      logical swapped
d85 1
a85 1
      DATA PCN/NN*ONE/
d101 13
a116 1
C
@


1.7
log
@boundary types for faces(edges) have been made more descriptive
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.6 2002/10/25 06:03:39 abonfi Exp abonfi $
d40 2
d47 3
a49 1
C
d51 5
a55 7
     +KLIST(NLIST)
      DOUBLE PRECISION VFACNOR(NDIM,*),VOL(NELEM), ZROE(NOFVAR,*),VLIST
     +(3,NLIST), STIFEL(NOFVAR,NOFVAR,NOFVERT,NOFVERT), NODRES(NOFVAR,
     +NOFVERT),NEWRES(NOFVAR,NOFVERT), VCZ(NOFVAR,NOFVERT),VCDZ(NOFVAR,
     +NOFVERT)
 
      INTEGER IBNDFAC(3,NBFAC)
a62 2
C
      EXTERNAL BC28
d65 2
a66 2
      DOUBLE PRECISION VCN(3*VMAX),TSTEP(NMAX*VMAX),
     +DUMMY((VMAX*NMAX)**2),PCN(12)
d76 1
a76 1
      INTEGER ICN(VMAX)
d93 1
a93 1
      DATA PCN/12*ONE/
d150 1
a150 1
     &    CALL SUBYY(ICN,NOFVERT,KLIST,VLIST,NLIST,PCN)
@


1.6
log
@add a flag when calling PARM_TO_CONS() and CONS_TO_PARM()
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.5 2002/09/14 08:57:44 abonfi Exp abonfi $
d126 2
a127 1
          IF (.NOT.(IBC.EQ.2.OR.IBC.EQ.8))GOTO 100
d149 2
a150 2
          IF(LREAD.AND.IBC.EQ.BC_INTERNAL_INFLOW)CALL SUBYY(ICN,NOFVERT,
     +    KLIST,VLIST,NLIST,PCN)
@


1.5
log
@now the timestep vector is dimensioned NOFVAR x NPOIN
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.4 2001/07/21 10:03:39 abonfi Exp abonfi $
d153 1
d183 4
a186 2
                      CALL PARM_TO_CONS(VCZ(1,IVERT),NDIM,NOFVAR,1)
                      CALL PARM_TO_CONS(VCDZ(1,IVERT),NDIM,NOFVAR,1)
d192 4
a195 2
                      CALL CONS_TO_PARM(VCZ(1,IVERT),NDIM,NOFVAR,1)
                      CALL CONS_TO_PARM(VCDZ(1,IVERT),NDIM,NOFVAR,1)
@


1.4
log
@passing nodenumbers to the BC28 routines
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.3 2001/07/19 09:55:54 abonfi Exp abonfi $
d65 2
a66 1
      DOUBLE PRECISION VCN(12),TSTEP(4),DUMMY(400),PCN(12)
d70 1
a70 1
C     TSTEP(1:NOFVERT-1)
d161 2
a162 1
          CALL VecSetValues(DT,NOFVERT-1,ICN,TSTEP,ADD_VALUES,IFAIL)
@


1.3
log
@changes made necessary when inflow/outflow boundary conditions have
been changed as of version 0.10.13
@
text
@d11 1
a11 1
C     $Id: ghost2.F,v 1.2 2001/07/04 06:48:26 abonfi Exp abonfi $
d152 2
a153 2
          CALL BC28(IELEM,VCN,VCZ,STIFEL,NODRES,TSTEP, NDIM,NOFVERT,
     +    NOFVAR,PCN,IBC)
d200 2
a201 2
                  CALL BC28(IELEM,VCN,VCDZ,DUMMY,NEWRES,TSTEP, NDIM,
     +            NOFVERT,NOFVAR,PCN,IBC)
@


1.2
log
@a few changes; mainly for debugging
@
text
@d1 4
a4 4
      SUBROUTINE GHOST2(BC28,ICELNOD,ICELFAC,VFACNOR,VOL,ZROE,
     +                 STIFEL,NODRES,NEWRES,VCZ,VCDZ,
     +                 NELEM,NDIM,NOFVERT,NOFVAR,
     +                 IBNDFAC,NBFAC,DT,RHS,A)
d11 1
a11 1
C     $Id: ghost2.F,v 1.1 2001/06/27 10:31:06 abonfi Exp abonfi $
d31 1
d46 8
a53 7
      INTEGER ICELNOD(NOFVERT,NELEM),ICELFAC(NOFVERT,NELEM)
      DOUBLE PRECISION VFACNOR(NDIM,*),VOL(NELEM),
     +                 ZROE(NOFVAR,*),
     +                 STIFEL(NOFVAR,NOFVAR,NOFVERT,NOFVERT),
     +                 NODRES(NOFVAR,NOFVERT),NEWRES(NOFVAR,NOFVERT),
     +                 VCZ(NOFVAR,NOFVERT),VCDZ(NOFVAR,NOFVERT)
      INTEGER IBNDFAC(3,NBFAC) 
d58 2
a59 2
      INTEGER I,IBC,ICLOR,IELEM,IFACE,N,
     +        IFAIL,IVERT,J,LOCA,LOCB,IVAR,JVAR,JVERT
d65 1
a65 1
      DOUBLE PRECISION VCN(12),TSTEP(4),DUMMY(400)
d92 1
d127 3
a129 3
      CALL CELPTR(IELEM, ICELNOD, ICELFAC, VOL,
     +   ZROE, VFACNOR, NDIM, NOFVERT, NOFVAR, ICN,
     +   VCZ, VCN, VOLUME)
d134 12
a145 9
      IF(IVERT.NE.NOFVERT)THEN
         CALL DSWAP(NOFVAR,VCZ(1,IVERT),1,VCZ(1,NOFVERT),1)
         LOCA = IDX(IVERT,1,NDIM)
         LOCB = IDX(NOFVERT,1,NDIM)
         CALL DSWAP(NDIM,VCN(LOCA),1,VCN(LOCB),1)
         LOCA = ICN(NOFVERT)
         ICN(NOFVERT) = ICN(IVERT)
         ICN(IVERT) = LOCA
      ENDIF
d147 7
a153 2
      CALL BC28(IELEM,VCN,VCZ,STIFEL,NODRES,TSTEP,
     +          NDIM,NOFVERT,NOFVAR,IBC)
d156 2
a157 2
      CALL X04CAF('General',' ',Nofvar,Nofvert,nodres,
     +            Nofvar,'nodres ',IFAIL)
d160 3
a162 3
      CALL VecSetValues(DT,NOFVERT-1,ICN,TSTEP,ADD_VALUES,IFAIL)
      CALL VecSetValuesBlocked(RHS,NOFVERT-1,ICN,NODRES,
     +                      ADD_VALUES,IFAIL)
d164 1
a164 1
      IF(.NOT.TIMEIMPL)GOTO 100
d166 5
a170 5
      do ivert=1,nofvert-1
      write(6,*)ielem,ivert,ivert
      CALL X04CAF('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,1),
     +            Nofvar,'Picard matrix ',IFAIL)
      enddo
d172 1
a172 1
      IF(PICARD)GOTO 50
d176 14
a189 14
      DO 85 IVERT = 1, NOFVERT-1
          DO 15 IVAR = 1, NOFVAR
             CALL DCOPY(NOFVAR*NOFVERT,VCZ,1,VCDZ,1)
             IF(COMPRESSIBLE)THEN
                CALL PARM_TO_CONS(VCZ(1,IVERT),NDIM,NOFVAR,1)
                CALL PARM_TO_CONS(VCDZ(1,IVERT),NDIM,NOFVAR,1)
             ENDIF
             EPS = ROOT_MACHINE_EPS*MAX(ABS(VCZ(IVAR,IVERT)),1.d0)*
     +             SIGN(1.d0,VCZ(IVAR,IVERT))
             VCDZ(IVAR,IVERT) = VCZ(IVAR,IVERT) + EPS
             IF(COMPRESSIBLE)THEN
                CALL CONS_TO_PARM(VCZ(1,IVERT),NDIM,NOFVAR,1)
                CALL CONS_TO_PARM(VCDZ(1,IVERT),NDIM,NOFVAR,1)
             ENDIF
d192 2
a193 2
      write(6,*)'ivert,ivar eps ',ivert,ivar,eps
      CALL X04CAF('General',' ',Nofvar,Nofvert,vcz(1,1),
d195 1
a195 1
      CALL X04CAF('General',' ',Nofvar,Nofvert,vcdz(1,1),
d200 2
a201 2
             CALL BC28(IELEM,VCN,VCDZ,DUMMY,NEWRES,TSTEP,
     +                   NDIM,NOFVERT,NOFVAR,IBC)
d205 1
a205 1
      CALL X04CAF('General',' ',Nofvar,Nofvert,nodres,
d207 1
a207 1
      CALL X04CAF('General',' ',Nofvar,Nofvert,newres,
d209 3
a211 3
      call dcopy(Nofvar*Nofvert,nodres,1,dummy,1)
      call matsub(dummy,nofvar,newres,nofvar,nofvar,nofvert)
      CALL X04CAF('General',' ',Nofvar,Nofvert,dummy,
d215 4
a218 4
             DO 95 JVAR = 1, NOFVAR
             DO 95 JVERT = 1, NOFVERT-1
                 STIFEL(JVAR,IVAR,JVERT,IVERT) =
     +           -(NEWRES(JVAR,JVERT)-NODRES(JVAR,JVERT))/EPS
d224 2
a225 2
   95 CONTINUE
   15 CONTINUE
d230 1
a230 1
   85 CONTINUE
d235 2
a236 2
      DO 37 IVERT = 1,NOFVERT-1
                  DO 37 JVERT = 1,NOFVERT-1
d238 3
a240 3
      CALL MatSetValuesBlockedLocal(A,1,ICN(IVERT),1,
     +     ICN(JVERT),STIFEL(1,1,IVERT,JVERT), ADD_VALUES,
     +     IFAIL)
d242 2
a243 2
      CALL MatSetValuesBlocked(A,1,ICN(IVERT),1,ICN
     +     (JVERT), STIFEL(1,1,IVERT,JVERT),ADD_VALUES,IFAIL)
d246 5
a250 5
      if(ivert.EQ.jvert)then
           write(6,*)ivert,jvert
           CALL X04CAF('General',' ',Nofvar,Nofvar,stifel(1,
     +     1,ivert,jvert), Nofvar,'Jacobian Matrix ',IFAIL)
      endif
d252 2
a253 2
   37         CONTINUE
      GOTO 100
d255 2
a256 2
   50 CONTINUE
      DO 25 IVERT = 1,NOFVERT-1 
d259 3
a261 3
          CALL MatSetValuesBlockedLocal(A,1,ICN(IVERT),1,ICN(IVERT),
     +                                  STIFEL(1,1,IVERT,1),
     +                                  ADD_VALUES,IFAIL)
d263 3
a265 3
          CALL MatSetValuesBlocked(A,1,ICN(IVERT),1,ICN(IVERT),
     +                             STIFEL(1,1,IVERT,1),
     +                             ADD_VALUES,IFAIL)
d268 3
a270 3
      write(6,*)ielem,ivert,ivert
      CALL X04CAF('General',' ',Nofvar,Nofvar,STIFEL(1,1,IVERT,1),
     +            Nofvar,'Jacobian ',IFAIL)
d273 1
a273 1
   25 CONTINUE
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
C     $Id: ghost.F,v 1.16 2000/11/14 16:47:34 aldo Exp $
d100 4
d105 1
d141 7
a147 2
          CALL BC28(IELEM,VCN,VCZ,STIFEL,NODRES,TSTEP,
     +NDIM,NOFVERT,NOFVAR,IBC)
d165 1
a165 1
      DO 15 IVERT = 1, NOFVERT-1
d181 2
a182 1
      CALL X04CAF('General',' ',Nofvar,Nofvert,vcz(1,IVERT),
d184 1
a184 1
      CALL X04CAF('General',' ',Nofvar,Nofvert,vcdz(1,IVERT),
d186 1
d191 12
d204 8
a211 2
C     The residual sent to vertex IVERT only depends
C     on the node itself
d213 10
a222 3
             DO 15 JVAR = 1, NOFVAR
                 STIFEL(JVAR,IVAR,IVERT,1) =
     +           -(NEWRES(JVAR,IVERT)-NODRES(JVAR,IVERT))/EPS
d224 19
a242 1
   15 CONTINUE
@
