head	1.1;
access;
symbols;
locks; strict;
comment	@c @;


1.1
date	98.04.07.12.48.15;	author aldo;	state Exp;
branches;
next	;


desc
@routines for matrix-vector operations
@


1.1
log
@Initial revision
@
text
@C
C------------------------------+------------------------------
C
C This file contains the following subroutines:
C
C LUDECO performs the LU factorization of a dense matrix
C LUSOLV solves A*c=b where the A matrix has been previously factored
C        with LUDECO
C LUSOLT solves A'*c=b where the A matrix has been previously factored
C        with LUDECO and A' denotes the transpose of A
C BAMUX  is a block version of AMUX (skit library)
C BATMUX is a block version of ATMUX (skit library)
C BLUSOL is a block version of LUSOL (skit library)
C BDSDI  solves Dz=r; D being a block diagonal matrix
C        previously factored with LUDECO
C BDSDT  solves D'z=r; D' being the transpose of the block diagonal matrix
C        D previously factored with LUDECO
C DBTRF  factors a block tridiagonal matrix
C DBTRS  solves a block tridiagonal matrix previously factored with with DBTRF
C
C------------------------------+------------------------------
C
c...
c...
c...
      SUBROUTINE LUDECO(A,ORDER)
c...
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ORDER
      DIMENSION A(ORDER,1)
c...
      DO 8 JC=2,ORDER
    8 A(1,JC) = A(1,JC)/A(1,1)
      JRJC = 1
   10 CONTINUE
      JRJC = JRJC+1
      JRJCM1 = JRJC-1
      JRJCP1 = JRJC+1
      DO 14 JR=JRJC,ORDER
      SUM = A(JR,JRJC)
      DO 12 JM=1,JRJCM1
   12 SUM = SUM - A(JR,JM)*A(JM,JRJC)
   14 A(JR,JRJC) = SUM
      IF (JRJC.EQ.ORDER) RETURN
      DO 18 JC = JRJCP1,ORDER
      SUM = A(JRJC,JC)
      DO 16 JM=1,JRJCM1
   16 SUM = SUM - A(JRJC,JM)*A(JM,JC)
   18 A(JRJC,JC) = SUM/A(JRJC,JRJC)
      GOTO 10
      END
C
C------------------------------+------------------------------
C
c...
c...SUBROUTINE TO SOLVE LINEAR ALGEBRAIC SYSTEM OF
c...EQUATIONS A*C=B AND STORE RESULTS IN VECTOR C.
c...
c...
c...
c...
      SUBROUTINE LUSOLV(A,B,C,ORDER)
c...
      IMPLICIT REAL*8 (A-H,O-Z)
      INTEGER ORDER
      DIMENSION A(ORDER,1),B(1),C(1)
c...
c...FIRST L(INV)*B
c...
      C(1) = B(1)/A(1,1)
      DO 14 JR=2,ORDER
      JRM1 = JR-1
      SUM = B(JR)
      DO 12 JM=1,JRM1
   12 SUM = SUM-A(JR,JM)*C(JM)
   14 C(JR) = SUM/A(JR,JR)
c...
c...NEXT U(INV) OF L(INV)*B
c...
      DO 18 JRJR=2,ORDER
      JR = ORDER-JRJR+1
      JRP1 = JR+1
      SUM = C(JR)
      DO 16 JMJM=JRP1,ORDER
      JM = ORDER-JMJM+JRP1
   16 SUM= SUM - A(JR,JM)*C(JM)
   18 C(JR) = SUM
c...
      RETURN
      END
C
C------------------------------+------------------------------
C
@
