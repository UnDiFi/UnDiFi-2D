head	1.4;
access
	tesistim
	abonfi;
symbols
	release3_14_0:1.4
	release3_13_0:1.4
	release3_12_0:1.4
	release3_11_0:1.4
	release3_10_0:1.4
	release3_8_0:1.4
	release3_7_1:1.4
	release3_7_0:1.4
	release3_4_5:1.4
	release3_4_4:1.4
	release3_4_3:1.4
	release3_4_2:1.4
	release3_4_1:1.4
	release3_4_0:1.4
	release3_3_5:1.4
	release3_3_4:1.3
	release3_3_3:1.3
	release3_3_2:1.3
	release3_3_1:1.3
	release3_3_0:1.2;
locks; strict;
comment	@c @;


1.4
date	2013.04.30.07.23.51;	author abonfi;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.26.12.07.26;	author abonfi;	state Exp;
branches;
next	1.2;

1.2
date	2005.09.09.15.32.58;	author abonfi;	state Exp;
branches;
next	1.1;

1.1
date	2005.09.09.08.40.09;	author abonfi;	state Exp;
branches;
next	;


desc
@a bunch of subroutines needed to handle
ANNULAR cascade flows
@


1.4
log
@added dofs.com among the included commons
@
text
@      SUBROUTINE ROTATE(ZROE,NOFVAR,NPNOD)
      IMPLICIT NONE
C
C     $Id: rotate.f,v 1.3 2013/01/26 12:07:26 abonfi Exp abonfi $
C
C Subroutine for rotating velocities
C in the periodic AND annular case v,w
C velocities are stored in Z(IY,*) Z(IZ,*)
C it is assumed that x coincides with the
C axis of the turbomachine
C
      INCLUDE 'paramt.h'
      INCLUDE 'periodic.com'
      INCLUDE 'dofs.com'
C
C     .. Scalar Arguments ..
      INTEGER NOFVAR,NPNOD
C     .. Array Arguments ..
      DOUBLE PRECISION ZROE(NOFVAR,*)
C     ..
C     .. Local Scalars ..
      INTEGER I
C     ..
C
      DO 3 I = 1, NPNOD
         CYY = ZROE(IY,I)
         CZZ = ZROE(IZ,I)
         ZROE(IY,I) = COSALPHA*CYY-SINALPHA*CZZ
         ZROE(IZ,I) = SINALPHA*CYY+COSALPHA*CZZ
    3 CONTINUE
C
      RETURN
 
      END
      SUBROUTINE INIQMAT(AMAT,NOFVAR)
C
C     Initialize the rotation matrix
C     to be used for annular cascade flows
C     this routine should be called only once
C
C     AMAT is nothing but QMAT
C     the reason for passing QMAT as AMAT
C     is that QMAT is stored as a 1D array
C     while here we want to access AMAT as
C     a 2D array
C
      IMPLICIT NONE
      INCLUDE 'paramt.h'
      INCLUDE 'constants.h'
      INCLUDE 'periodic.com'
      INCLUDE 'dofs.com'
C
      INTEGER NOFVAR
      DOUBLE PRECISION AMAT(NOFVAR,*)
      INTEGER I,J
C
      DO J = 1,NOFVAR
         DO I = 1,NOFVAR
            AMAT(I,J) = ZERO
         ENDDO
      ENDDO
      DO I = 1,NOFVAR
         AMAT(I,I) = ONE
      ENDDO
      AMAT(IY,IY) = COSALPHA
      AMAT(IY,IZ) =-SINALPHA
      AMAT(IZ,IY) = SINALPHA
      AMAT(IZ,IZ) = COSALPHA
      RETURN
      END
C
      SUBROUTINE ROTATECIJ(A,NOFVAR,NOFVERT,IMAX,JMAX)
C
C     Rotate the Jacobian due to periodic
C     bcs in an annular cascade
C
      IMPLICIT NONE
      INCLUDE 'paramt.h'
      INCLUDE 'constants.h'
      INCLUDE 'periodic.com'
C
      INTEGER NOFVAR,NOFVERT,IMAX,JMAX
      DOUBLE PRECISION A(NOFVAR,NOFVAR,NOFVERT,NOFVERT)
      DOUBLE PRECISION WKSP(MAX_NOFVAR_SQR)
      INTEGER IVERT,JVERT
C
C     loop over vertices
C
      DO IVERT = 1,IMAX
         IF( PFLAG(IVERT) )THEN 
            DO JVERT = 1,JMAX
C
C     does C_{il} := Q^t C_{il} forall l
C
               CALL DCOPY(NOFVAR*NOFVAR,A(1,1,IVERT,JVERT),1,WKSP,1)
               CALL DGEMM('Transpose','No Transpose',NOFVAR,NOFVAR,
     &         NOFVAR,ONE,QMAT,NOFVAR,WKSP,NOFVAR,ZERO,
     &         A(1,1,IVERT,JVERT),NOFVAR)
            ENDDO
C
C     does C_{ii} := C_{ii} Q
C
            CALL DCOPY(NOFVAR*NOFVAR,A(1,1,IVERT,IVERT),1,WKSP,1)
            CALL DGEMM('No Transpose','No Transpose',NOFVAR,NOFVAR,
     &      NOFVAR,ONE,WKSP,NOFVAR,QMAT,NOFVAR,ZERO,
     &      A(1,1,IVERT,IVERT),NOFVAR)
         ENDIF
      ENDDO
      RETURN
      END
@


1.3
log
@changed the name of an included file
@
text
@d4 1
a4 1
C     $Id: rotate.f,v 1.2 2005/09/09 15:32:58 abonfi Exp abonfi $
d14 1
d51 1
@


1.2
log
@the rotation matrix was bugged
@
text
@d4 1
a4 1
C     $Id: rotate.f,v 1.1 2005/09/09 08:40:09 abonfi Exp abonfi $
d48 1
a48 1
      INCLUDE 'constants'
d77 1
a77 1
      INCLUDE 'constants'
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
C     $Id: backup.f,v 1.11 2000/12/08 12:52:12 aldo Exp $
d64 2
a65 2
      AMAT(IY,IZ) = SINALPHA
      AMAT(IZ,IY) =-SINALPHA
@
