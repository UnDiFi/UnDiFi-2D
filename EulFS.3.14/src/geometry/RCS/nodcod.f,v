head	1.4;
access
	caspur
	abonfi
	tesistim;
symbols
	release3_14_0:1.4
	release3_13_0:1.4
	release3_12_0:1.4
	release3_11_0:1.4
	release3_10_0:1.4
	release3_8_0:1.4
	release3_7_1:1.4
	release3_7_0:1.4
	release3_4_5:1.4
	release3_4_4:1.4
	release3_4_3:1.4
	release3_4_2:1.4
	release3_4_1:1.4
	release3_4_0:1.4
	release3_3_5:1.4
	release3_3_4:1.4
	release3_3_3:1.4
	release3_3_2:1.4
	release3_3_1:1.4
	release3_3_0:1.4;
locks; strict;
comment	@c @;


1.4
date	2000.11.15.09.07.52;	author aldo;	state Exp;
branches;
next	1.3;

1.3
date	2000.06.24.09.21.21;	author aldo;	state Exp;
branches;
next	1.2;

1.2
date	98.02.03.08.11.49;	author aldo;	state Exp;
branches;
next	1.1;

1.1
date	97.11.29.08.49.33;	author aldo;	state Exp;
branches;
next	;


desc
@Sets the node code used by the implicit solver
@


1.4
log
@changed the include file for the I/O devices
@
text
@      SUBROUTINE NODCOD(NODCODE,NPOIN,NBPOIN,ICELNOD,NOFVERT,NELEM,
     +                  IBNDFAC,NBFAC)
C
      IMPLICIT NONE
C
      INCLUDE 'io.com'
C
C     .. Scalar Arguments ..
      INTEGER NBFAC,NBPOIN,NELEM,NOFVERT,NPOIN
C
C     On entry:
C     --------
C     NBFAC   no. of processor owned boundary faces/edges;
C             global number of boundary faces/edges 
C             in the uni-processor case
C     NOFVERT number of vertices per element (=NDIM+1, since
C             only triangles or tetrahedra are allowed)
C     NELEM   no. of processor owned elements (triangles/tetrahedra);
C             global number of elements in the uni-processor case
C
C     Upon return:
C     -----------
C     ..
C     .. Array Arguments ..
      INTEGER IBNDFAC(3,NBFAC),ICELNOD(NOFVERT,NELEM),NODCODE(NPOIN)
C
C     On entry:
C     --------
C     IBNDFAC -- Integer IBNDFAC(1:3,1:NBFAC)
C            Boundary face pointer :
C
C          + IBNDFAC(1,ibfac) gives the global number of the
C            element the ibfac-th face belongs to
C
C          + IBNDFAC(2,ibfac) gives the local number of the
C            vertex opposite the ibfac-th boundary face, ie.
C            its global node number is given by:
C            ICELNOD(IBNDFAC(2,ibfac),IBNDFAC(1,ibfac))
C
C          + IBNDFAC(3,ibfac) gives the boundary color
C            of the ibfac-th boundary face
C
C     ICELNOD -- Integer ICELNOD(1:NOFVERT,1:NELEM)
C            Cell to Node pointer : ICELNOD(i,ielem) gives the
C            local node number (in the multi-proc. case) or the
C            global node number (in the uni-proc. case) of 
C            the i-th vertex of the ielem-th cell
C
C     Upon return:
C     -----------
C     NODCODE -- Integer NODCOD(1:NPOIN)
C         gives the number of boundary edges/faces meeting
C         in a given meshpoint, i.e. it is an integer flag 
C         used to distinguish between internal and boundary nodes
C
C         NODCODE(i) = 0 --> internal node
C         NODCODE(i) > 0 --> boundary node shared by nodcode(i)
C         boundary faces
C
C
C
C     ..
C     .. Local Scalars ..
      INTEGER IELEM,IFACE,IPOIN,IVERT,JVERT,KVERT
C     ..
C     .. External Functions ..
      INTEGER ICYCL
      EXTERNAL ICYCL
C     ..
      DO 100 IFACE = 1,NBFAC
          IELEM = IBNDFAC(1,IFACE)
          IVERT = IBNDFAC(2,IFACE)
          DO 90 JVERT = 1,NOFVERT - 1
              KVERT = ICYCL(IVERT+JVERT,NOFVERT)
              IPOIN = ICELNOD(KVERT,IELEM)
              NODCODE(IPOIN) = NODCODE(IPOIN) + 1
   90     CONTINUE
  100 CONTINUE
C
C     ... Count the boundary nodes ...
C
      NBPOIN = 0
      DO 80 IPOIN = 1,NPOIN
          IF (NODCODE(IPOIN).NE.0) NBPOIN = NBPOIN + 1
   80 CONTINUE
      WRITE (NOUT,FMT=300) NBPOIN
C
      RETURN

  300 FORMAT (15X,'BOUNDARY POINTS (NBPOIN) = ',I6)

      END
@


1.3
log
@add comments and explanations
@
text
@d6 1
a6 1
      INCLUDE 'IO'
@


1.2
log
@NBPOIN now corretly initialized to 0.d0
@
text
@d8 2
a9 2
C     ... NODCODE (ISTAK(LNODCOD)) is an integer flag used to
C         distinguish between internal and boundary nodes ...
d11 9
d21 5
a25 3
C ICELNOD -- Integer ICELNOD(1:NOFVERT,1:NELEM)
C            Cell to Node pointer : ICELNOD(i,ielem) gives the
C            global node number of the i-th vertex of the ielem-th cell
d27 3
a29 1
C IBNDFAC -- Integer IBNDFAC(1:3,1:NBFAC)
d43 18
a60 3
C     nodcode(i) = 0 --> internal node
C     nodcode(i) > 0 --> boundary node shared by nodcode(i)
C     boundary faces
a61 5
C     .. Scalar Arguments ..
      INTEGER NBFAC,NBPOIN,NELEM,NOFVERT,NPOIN
C     ..
C     .. Array Arguments ..
      INTEGER IBNDFAC(3,NBFAC),ICELNOD(NOFVERT,NELEM),NODCODE(NPOIN)
@


1.1
log
@Initial revision
@
text
@d59 1
@
