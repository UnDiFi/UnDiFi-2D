head	1.1;
access;
symbols
	release3_14_0:1.1
	release3_13_0:1.1
	release3_12_0:1.1
	release3_11_0:1.1
	release3_10_0:1.1
	release3_8_0:1.1
	release3_7_1:1.1
	release3_7_0:1.1
	release3_4_5:1.1
	release3_4_4:1.1
	release3_4_3:1.1
	release3_4_2:1.1
	release3_4_1:1.1
	release3_4_0:1.1
	release3_3_5:1.1
	release3_3_4:1.1
	release3_3_3:1.1
	release3_3_2:1.1
	release3_3_0:1.1
	release3_3_1:1.1;
locks; strict;
comment	@c @;


1.1
date	2013.01.24.08.41.33;	author abonfi;	state Exp;
branches;
next	;


desc
@This function forces its argument X to be stored in a
memory location, thus providing a means of determining
loating point number characteristics (such as the machine
precision) when it is necessary to avoid computation in
high precision registers.
@


1.1
log
@Initial revision
@
text
@      DOUBLE PRECISION FUNCTION STORE(X)
C
C***********************************************************
C
C                                               From TRIPACK
C                                            Robert J. Renka
C                                  Dept. of Computer Science
C                                       Univ. of North Texas
C                                             (817) 565-2767
C                                                   03/18/90
C
C   This function forces its argument X to be stored in a
C memory location, thus providing a means of determining
C floating point number characteristics (such as the machine
C precision) when it is necessary to avoid computation in
C high precision registers.
C
C
C On input:
C
C       X = Value to be stored.
C
C X is not altered by this function.
C
C On output:
C
C       STORE = Value of X after it has been stored and
C               possibly truncated or rounded to the single
C               precision word length.
C
C Modules required by STORE:  None
C
C***********************************************************
C
C
C     .. Scalar Arguments ..
      DOUBLE PRECISION X
C     ..
C     .. Scalars in Common ..
      DOUBLE PRECISION Y
C     ..
C     .. Common blocks ..
      COMMON /STCOM/Y
C     ..
      Y = X
      STORE = Y
      RETURN

      END
@
