      SUBROUTINE PERMAT2( NN,IA,JA,P,NEWIA,ISYM,LEVEL,NOUT,IERR )
C
C     A modified version of permat, where only the structure of the
C     matrix is permuted ie. only arrays IA and JA
C
C*********************************************************************
C
C ... SUBROUTINE PERMAT TAKES THE SPARSE MATRIX REPRESENTATION
C     OF THE MATRIX STORED IN THE ARRAYS IA, JA AND
C     PERMUTES BOTH ROWS AND COLUMNS OVERWRITING THE PREVIOUS
C     STRUCTURE.
C
C ... PARAMETER LIST:
C
C         N      ORDER OF SYSTEM (= NN)
C         IA,JA  INTEGER ARRAYS OF THE SPARSE MATRIX REPRESENTATION
C         P      PERMUTATION VECTOR
C         NEWIA  INTEGER WORK VECTOR OF LENGTH N
C         ISYM   SYMMETRIC/NONSYMMETRIC STORAGE SWITCH
C         LEVEL  SWITCH CONTROLLING LEVEL OF OUTPUT
C         NOUT OUTPUT UNIT NUMBER
C         IER    OUTPUT ERROR FLAG (= IERR)
C
C                   IER =   0  NORMAL RETURN
C                   IER = 301  NO ENTRY IN ITH ROW OF ORIGINAL
C                              MATRIX. IF LEVEL IS GREATER THAN
C                              0, I WILL BE PRINTED
C                   IER = 302  THERE IS NO ENTRY IN THE ITH ROW
C                              OF THE PERMUTED MATRIX
C                   IER = 303  ERROR RETURN FROM QSORT IN
C                              SORTING THE ITH ROW OF THE
C                              PERMUTED MATRIX
C ... IT IS ASSUMED THAT THE I-TH ENTRY OF THE PERMUTATION VECTOR
C     P INDICATES THE ROW THE I-TH ROW GETS MAPPED INTO.  (I.E.
C     IF ( P(I) = J ) ROW I GETS MAPPED INTO ROW J.)
C
C ... THE ARRAY NEWIA IS AN INTEGER WORK VECTOR OF LENGTH N WHICH
C     KEEPS TRACK OF WHERE THE ROWS BEGIN IN THE PERMUTED STRUCTURE.
C
C ... PERMAT IS CAPABLE OF PERMUTING BOTH THE SYMMETRIC AND NON-
C     SYMMETRIC FORM OF IA, JA, AND A.  IF ( ISYM .EQ. 0 ) SYMMETRIC
C     FORM IS ASSUMED.
C
C ... TWO EXTERNAL MODULES ARE USED BY PERMAT.  THE FIRST IS INTEGER
C     FUNCTION BISRCH WHICH USES A BISECTION SEARCH ( ORDER LOG-BASE-2
C     OF N+1 ) THROUGH THE ARRAY IA TO FIND THE ROW INDEX OF AN ARBI-
C     TRARY ENTRY EXTRACTED FROM THE ARRAY JA. THE SECOND IS SUBROUTINE
C     QSORT WHICH PERFORMS A QUICK SORT TO PLACE THE ENTRIES IN
C     THE PERMUTED ROWS IN COLUMN ORDER.
C
C*********************************************************************
C
      INTEGER NN, IA(1), JA(1), P(NN), NEWIA(NN), ISYM, IERR
C
C ... INTERNAL VARIABLES
C
      INTEGER BISRCH, I, IBGN, IEND, IP, IPP, J, JAJ, JP, IER, K, N,
     +NELS, NEXT, NPL1
C
C
C*********************************************************************
C
C ... PREPROCESSING PHASE
C
C ...... DETERMINE THE NUMBER OF NONZEROES IN THE ROWS OF THE PERMUTED
C        MATRIX AND STORE THAT IN NEWIA.  THEN SWEEP THRU NEWIA TO MAKE
C        NEWIA(I) POINT TO THE BEGINNING OF EACH ROW IN THE PERMUTED
C        DATA STRUCTURE.  ALSO NEGATE ALL THE ENTRIES IN JA TO INDICATE
C        THAT THOSE ENTRIES HAVE NOT BEEN MOVED YET.
C
      N=NN
      IER = 0
      NPL1 = N + 1
      NELS = IA(NPL1) - 1
      DO 10 I = 1, N
         NEWIA(I) = 0
   10 CONTINUE
      DO 40 I = 1, N
         IP = P(I)
         IBGN = IA(I)
         IEND = IA(I+1) - 1
         IF ( IBGN .GT. IEND ) GO TO 200
         DO 30 J = IBGN, IEND
            IPP = IP
            JAJ = JA(J)
            JP = P(JAJ)
            IF ( ISYM .EQ.  0.AND. IP .GT. JP ) IPP = JP
            NEWIA(IPP) = NEWIA(IPP) + 1
            JA(J) = -JAJ
   30    CONTINUE
   40 CONTINUE
      IBGN = 1
      DO 50 I = 1, N
         K = IBGN + NEWIA(I)
         NEWIA(I) = IBGN
         IBGN = K
   50 CONTINUE
C
C ...... PREPROCESSING NOW FINISHED.
C
C ...... NOW PERMUTE JA AND A.  THIS PERMUTATION WILL PERFORM THE
C        FOLLOWING STEPS
C
C           1.  FIND THE FIRST ENTRY IN JA NOT PERMUTED WHICH IS
C               INDICATED BY AN NEGATIVE VALUE IN JA
C           2.  COMPUTE WHICH ROW THE CURRENT ENTRY IS IN.  THIS
C               IS COMPUTED BY A BISECTION SEARCH THRU THE ARRAY
C               IA.
C           3.  USING THE PERMUTATION ARRAY P AND THE ARRAY NEWIA
C               COMPUTE WHERE THE CURRENT ENTRY IS TO BE PLACED.
C           4.  THEN PICK UP THE ENTRY WHERE THE CURRENT ENTRY WILL
C               GO.  PUT THE CURRENT ENTRY IN PLACE.  THEN MAKE THE
C               DISPLACED ENTRY THE CURRENT ENTRY AND LOOP TO STEP 2.
C           5.  THIS PROCESS WILL END WHEN THE NEXT ENTRY HAS ALREADY
C               BEEN MOVED.  THEN LOOP TO STEP 1.
C
      DO 80 J = 1, NELS
         IF ( JA(J) .GT.  0) GO TO 80
         JAJ = -JA(J)
         NEXT = J
         JA(J) = JAJ
C
   60    JP = P(JAJ)
         I = BISRCH ( NPL1, IA, NEXT )
         IP = P(I)
         IPP = IP
         IF ( ISYM .NE.  0.OR. IP .LE. JP ) GO TO 70
         IPP = JP
         JP = IP
   70    NEXT = NEWIA(IPP)
C
         JAJ = -JA(NEXT)
         JA(NEXT) = JP
         NEWIA(IPP) = NEWIA(IPP) + 1
         IF ( JAJ .GT.  0) GO TO 60
C
   80 CONTINUE
C
C ...... THE MATRIX IS NOW PERMUTED BUT THE ROWS MAY NOT BE IN
C        ORDER.  THE REMAINDER OF THIS SUBROUTINE PERFORMS
C        A QUICK SORT ON EACH ROW TO SORT THE ENTRIES IN
C        COLUMN ORDER.  THE IA ARRAY IS ALSO CORRECTED FROM
C        INFORMATION STORED IN THE NEWIA ARRAY.  NEWIA(I) NOW
C        POINTS TO THE FIRST ENTRY OF ROW I+1.
C
      IA(1) = 1
      DO 100 I = 1, N
         IA(I+1) = NEWIA(I)
         K = IA(I+1) - IA(I)
         IF ( K .EQ.  1) GO TO 100
         IF ( K .LT.  1) GO TO 210
C
         IBGN = IA(I)
         CALL QSORT2( K, JA(IBGN), IER )
         IF ( IER .NE.  0) GO TO 220
C
  100 CONTINUE
C
C ...... END OF MATRIX PERMUTATION
C
      GO TO 230
C
C ... ERROR TRAPS
C
C ...... NO ENTRY IN ROW I IN THE ORIGINAL SYSTEM
C
  200 IER = 301
      IF(LEVEL .GE. 0) WRITE(NOUT,205) I
  205 FORMAT(1H0, 40H*** F A T A L     E R R O R ************ / 1H0,
     +30H    IN ITPACK ROUTINE PERMAT  / 1H , 20H    NO ENTRY IN ROW ,
     +I10,20H OF ORIGINAL MATRIX )
      GO TO 230
C
C ...... NO ENTRY IN ROW I IN THE PERMUTED SYSTEM
C
  210 IER = 302
      IF(LEVEL .GE. 0) WRITE(NOUT,215) I
  215 FORMAT(1H0, 40H*** F A T A L     E R R O R ************ / 1H0,
     +30H    IN ITPACK ROUTINE PERMAT  / 1H , 20H    NO ENTRY IN ROW ,
     +I10,20H OF PERMUTED MATRIX )
      GO TO 230
C
C ...... ERROR RETURN FROM SUBROUTINE QSORT
C
  220 IER = 303
      IF(LEVEL .GE. 0) WRITE(NOUT,225) I
  225 FORMAT(1H0, 40H*** F A T A L     E R R O R ************ / 1H0,
     +30H    IN ITPACK ROUTINE QSORT   / 1H ,
     +34H    ERROR IN SORTING PERMUTED ROW ,I12 / 1H ,
     +40H    CALLED FROM ITPACK ROUTINE PERMAT   )
C
  230 CONTINUE
      IERR = IER
      RETURN
      END
